<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Core creation code

// load ini

script_title = "";

save_slot = 0;
if file_exists("data.ini") {
    ini_open("data.ini")
    save_slot = ini_read_real("data","save",save_slot);
} else {
    ini_open("data.ini")
    ini_write_real("data","save",save_slot);
}
ini_close();

// all fonts
draw_set_font(FnMainFont);
draw_set_halign(fa_left);
draw_set_valign(fa_center);

// general vars
draw_mode = 0; // 0 - choosing, 1 - first page, 2 - second page
amy_order_enable = 1; // 0 - off, 1 - on
button_lock = 0;
filter_box_open = 0; // tag filters
help_box_open = 0; // help
invert_other_night = 0; // 0 - not inverted, 1 - invert for print
fable_offset = -500;
arrow_button_cd = 0;
background_enable = 1;
pic_mode = 1; // 0 - old pics, 1 - new pics
pic_scale = 1.8;

// filter list and selection
highlight_list = -1;
highlight_selection = -1;
filter_list[0] = 0;
list_pick[0] = 0;
list_size = 0;
list_max = 20;
list_mode = 0; // 0 - chars, 1 - travellers, 2 - fabled
scroll = 0;
scroll_max = 0;
side_chars_max = 8;

ui_icon_x = 1100;
ui_icon_y = 1550;

ui_x = 1100;
ui_y = 100;
box_size = 100;

// picks
jynx_init_max = 13;
pick_max = 25;
pick_current = 0;
for(i=0; i&lt;4; i++) {
    pick_group_amount[i] = 0;
    for(j=0; j&lt;pick_max; j++)
        pick_group_select[i,j] = 0;
}

group_title_card[charGroup.townsfolk] = SprTownsfolk;
group_title_card[charGroup.outsider] = SprOutsiders;
group_title_card[charGroup.minion] = SprMinions;
group_title_card[charGroup.demon] = SprDemons;

side_char_mode_title[0] = "Стандартные";
side_char_mode_title[1] = "Путники";
side_char_mode_title[2] = "Сказки";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Enum

enum charName {
    baron,
    butler,
    chef,
    drunk,
    empath,
    fortuneteller,
    imp,
    investigator,
    librarian,
    mayor,
    monk,
    poisoner,
    ravenkeeper,
    recluse,
    saint,
    scarletwoman,
    slayer,
    soldier,
    spy,
    undertaker,
    virgin,
    washerwoman,
    assassin,
    chambermaid,
    courtier,
    devilsadvocate,
    exorcist,
    fool,
    gambler,
    godfather,
    goon,
    gossip,
    grandmother,
    innkeeper,
    lunatic,
    mastermind,
    minstrel,
    moonchild,
    pacifist,
    po,
    professor,
    pukka,
    sailor,
    shabaloth,
    tealady,
    tinker,
    zombuul,
    artist,
    barber,
    cerenovus,
    clockmaker,
    dreamer,
    eviltwin,
    fanggu,
    flowergirl,
    juggler,
    klutz,
    mathematician,
    mutant,
    nodashii,
    oracle,
    philosopher,
    pithag,
    sage,
    savant,
    seamstress,
    snakecharmer,
    sweetheart,
    towncrier,
    vigormortis,
    vortox,
    witch,
    acrobat,
    alchemist,
    alhadikhia,
    amnesiac,
    atheist,
    balloonist,
    boomdandy,
    bountyhunter,
    cannibal,
    choirboy,
    cultleader,
    damsel,
    engineer,
    farmer,
    fearmonger,
    fisherman,
    general,
    goblin,
    golem,
    heretic,
    huntsman,
    king,
    legion,
    leviathan,
    lilmonsta,
    lleech,
    lycanthrope,
    magician,
    marionette,
    mezepheles,
    nightwatchman,
    noble,
    organgrinder,
    pixie,
    politician,
    poppygrower,
    preacher,
    psychopath,
    puzzlemaster,
    riot,
    snitch,
    vizier,
    knight,
    steward,
    highPriestess,
    widow,
    lastChar
};

enum fabledName {
    angel,
    buddhist,
    djinn,
    doomsayer,
    duchess,
    fibbin,
    fiddler,
    hellslibrarian,
    revolutionary,
    sentinel,
    spiritofivory,
    stormcatcher,
    toymaker,
    gardener,
    bootlegger,
    lastChar
}

enum travellerName {
    blank,
    apprentice,
    barista,
    beggar,
    bishop,
    bonecollector,
    bureaucrat,
    butcher,
    deviant,
    gangster,
    gunslinger,
    harlot,
    judge,
    matron,
    scapegoat,
    thief,
    voudon,
    lastChar
}

for(i = charName.baron; i &lt;= charName.widow; i++) {
    for(j = i+1; j &lt;= charName.widow; j++) {
        jynx_marker[i,j] = 0;
        jynx_desc[i,j] = "";
    }
}

enum setName {
    troubleBrewing,
    badMoonRising,
    sectsAndViolets,
    experimental
};

enum charGroup {
    townsfolk,
    outsider,
    minion,
    demon
};

enum amyOrder {
    firstNight,
    firstAndEveryNight,
    everyNight,
    everyNightAsterisk,
    dayActions,
    dayOncePerGame,
    oncePerGame,
    triggerOncePerGame,
    passive
};

titleCardSprite[charGroup.townsfolk] = SprTownsfolk;
titleCardSprite[charGroup.outsider] = SprOutsiders;
titleCardSprite[charGroup.minion] = SprMinions;
titleCardSprite[charGroup.demon] = SprDemons;

titleSet[setName.troubleBrewing] = "Trouble Brewing";
titleSet[setName.badMoonRising] = "Bad Moon Rising";
titleSet[setName.sectsAndViolets] = "Sects &amp; Violets";
titleSet[setName.experimental] = "Experimental";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Trouble Brewing

charCode[charName.baron] = "baron"
charIcon[charName.baron] = SprBaron
charTitle[charName.baron] = "Барон"
charDesc[charName.baron] = "В игре дополнительные Посторонние. [+2 Посторонних]"
charSet[charName.baron] = setName.troubleBrewing;
group[charName.baron] = charGroup.minion;
f_night[charName.baron] = 0;
o_night[charName.baron] = 0;
amy_order[charName.baron] = amyOrder.passive

charCode[charName.butler] = "butler"
charIcon[charName.butler] = SprButler
charTitle[charName.butler] = "Дворецкий"
charDesc[charName.butler] = "Каждую ночь вы выбираете игрока (не себя). Следующим днём можете голосовать только если выбранный игрок голосует."
charSet[charName.butler] = setName.troubleBrewing;
group[charName.butler] = charGroup.outsider;
f_night[charName.butler] = 38;
o_night[charName.butler] = 66;
amy_order[charName.butler] = amyOrder.everyNight

charCode[charName.chef] = "chef"
charIcon[charName.chef] = SprChef
charTitle[charName.chef] = "Шеф"
charDesc[charName.chef] = "В начале вы знаете, сколько пар Злодеев в игре."
charSet[charName.chef] = setName.troubleBrewing;
group[charName.chef] = charGroup.townsfolk;
f_night[charName.chef] = 35;
o_night[charName.chef] = 0;
amy_order[charName.chef] = amyOrder.firstNight

charCode[charName.drunk] = "drunk"
charIcon[charName.drunk] = SprDrunk
charTitle[charName.drunk] = "Пьяница"
charDesc[charName.drunk] = "Вы не знаете, что вы пьяница. Вы думаете, что вы конкретный горожанин, но это не так."
charSet[charName.drunk] = setName.troubleBrewing;
group[charName.drunk] = charGroup.outsider;
f_night[charName.drunk] = 0;
o_night[charName.drunk] = 0;
amy_order[charName.drunk] = amyOrder.passive

charCode[charName.empath] = "empath"
charIcon[charName.empath] = SprEmpath
charTitle[charName.empath] = "Эмпат"
charDesc[charName.empath] = "Каждую ночь вы узнаёте, сколько Злодеев среди ваших двух живых соседей."
charSet[charName.empath] = setName.troubleBrewing;
group[charName.empath] = charGroup.townsfolk;
f_night[charName.empath] = 36;
o_night[charName.empath] = 52;
amy_order[charName.empath] = amyOrder.everyNight

charCode[charName.fortuneteller] = "fortune_teller"
charIcon[charName.fortuneteller] = SprFortuneTeller
charTitle[charName.fortuneteller] = "Предсказатель"
charDesc[charName.fortuneteller] = "Каждую ночь вы выбираете двоих игроков и узнаёте, есть ли среди них Демон. Есть один Добрый игрок, которого вы также видите как Демона."
charSet[charName.fortuneteller] = setName.troubleBrewing;
group[charName.fortuneteller] = charGroup.townsfolk;
f_night[charName.fortuneteller] = 37;
o_night[charName.fortuneteller] = 53;
amy_order[charName.fortuneteller] = amyOrder.everyNight

charCode[charName.imp] = "imp"
charIcon[charName.imp] = SprImp
charTitle[charName.imp] = "Чёрт"
charDesc[charName.imp] = "Каждую ночь* вы выбираете игрока. Этот игрок умирает. Если вы убиваете таким образом себя, приспешник становится Чёртом."
charSet[charName.imp] = setName.troubleBrewing;
group[charName.imp] = charGroup.demon;
f_night[charName.imp] = 0;
o_night[charName.imp] = 23;
amy_order[charName.imp] = amyOrder.everyNightAsterisk

charCode[charName.investigator] = "investigator"
charIcon[charName.investigator] = SprInvestigator
charTitle[charName.investigator] = "Следователь"
charDesc[charName.investigator] = "В начале вы знаете, что один из двух игроков - конкретный Приспешник."
charSet[charName.investigator] = setName.troubleBrewing;
group[charName.investigator] = charGroup.townsfolk;
f_night[charName.investigator] = 34;
o_night[charName.investigator] = 0;
amy_order[charName.investigator] = amyOrder.firstNight

charCode[charName.librarian] = "librarian"
charIcon[charName.librarian] = SprLibrarian
charTitle[charName.librarian] = "Библиотекарь"
charDesc[charName.librarian] = "В начале вы знаете, что один из двух игроков - конкретный Посторонний. (Или что их нет)"
charSet[charName.librarian] = setName.troubleBrewing;
group[charName.librarian] = charGroup.townsfolk;
f_night[charName.librarian] = 33;
o_night[charName.librarian] = 0;
amy_order[charName.librarian] = amyOrder.firstNight

charCode[charName.mayor] = "mayor"
charIcon[charName.mayor] = SprMayor
charTitle[charName.mayor] = "Мэр"
charDesc[charName.mayor] = "Если не произошла казнь и в конце дня только 3 игрока живы, вы и ваша команда побеждаете. Если вы умираете ночью, вместо вас может умереть кто-то другой."
charSet[charName.mayor] = setName.troubleBrewing;
group[charName.mayor] = charGroup.townsfolk;
f_night[charName.mayor] = 0;
o_night[charName.mayor] = 0;
amy_order[charName.mayor] = amyOrder.passive

charCode[charName.monk] = "monk"
charIcon[charName.monk] = SprMonk
charTitle[charName.monk] = "Монах"
charDesc[charName.monk] = "Каждую ночь* вы выбираете игрока (не себя), этому игроку не может навредить Демон."
charSet[charName.monk] = setName.troubleBrewing;
group[charName.monk] = charGroup.townsfolk;
f_night[charName.monk] = 0;
o_night[charName.monk] = 11;
amy_order[charName.monk] = amyOrder.everyNightAsterisk

charCode[charName.poisoner] = "poisoner"
charIcon[charName.poisoner] = SprPoisoner
charTitle[charName.poisoner] = "Отравитель"
charDesc[charName.poisoner] = "Каждую ночь выбираете игрока. Он отравлен ночью и до конца дня."
charSet[charName.poisoner] = setName.troubleBrewing;
group[charName.poisoner] = charGroup.minion;
f_night[charName.poisoner] = 16;
o_night[charName.poisoner] = 6;
amy_order[charName.poisoner] = amyOrder.everyNight

charCode[charName.ravenkeeper] = "ravenkeeper"
charIcon[charName.ravenkeeper] = SprRavenkeeper
charTitle[charName.ravenkeeper] = "Хозяин ворона"
charDesc[charName.ravenkeeper] = "Если вы умираете ночью, вы просыпаетесь и выбираете игрока. Узнайте, какой у него персонаж."
charSet[charName.ravenkeeper] = setName.troubleBrewing;
group[charName.ravenkeeper] = charGroup.townsfolk;
f_night[charName.ravenkeeper] = 0;
o_night[charName.ravenkeeper] = 51;
amy_order[charName.ravenkeeper] = amyOrder.triggerOncePerGame

charCode[charName.recluse] = "recluse"
charIcon[charName.recluse] = SprRecluse
charTitle[charName.recluse] = "Отшельник"
charDesc[charName.recluse] = "Вас можно посчитать Злодеем, Приспешником или Демоном, даже если вы мертвы."
charSet[charName.recluse] = setName.troubleBrewing;
group[charName.recluse] = charGroup.outsider;
f_night[charName.recluse] = 0;
o_night[charName.recluse] = 0;
amy_order[charName.recluse] = amyOrder.passive

charCode[charName.saint] = "saint"
charIcon[charName.saint] = SprSaint
charTitle[charName.saint] = "Святой"
charDesc[charName.saint] = "Если вас казнят, ваша команда проигрывает."
charSet[charName.saint] = setName.troubleBrewing;
group[charName.saint] = charGroup.outsider;
f_night[charName.saint] = 0;
o_night[charName.saint] = 0;
amy_order[charName.saint] = amyOrder.passive

charCode[charName.scarletwoman] = "scarlet_woman"
charIcon[charName.scarletwoman] = SprScarletWoman
charTitle[charName.scarletwoman] = "Алая дама"
charDesc[charName.scarletwoman] = "Если в игре 5+ игроков живы и Демон умер, вы становитесь Демоном. (Путники не считаются)"
charSet[charName.scarletwoman] = setName.troubleBrewing;
group[charName.scarletwoman] = charGroup.minion;
f_night[charName.scarletwoman] = 0;
o_night[charName.scarletwoman] = 16;
amy_order[charName.scarletwoman] = amyOrder.passive

charCode[charName.slayer] = "slayer"
charIcon[charName.slayer] = SprSlayer
charTitle[charName.slayer] = "Убийца демонов"
charDesc[charName.slayer] = "Один раз за игру, днём, публично можете выбрать игрока. Если это Демон - он умирает."
charSet[charName.slayer] = setName.troubleBrewing;
group[charName.slayer] = charGroup.townsfolk;
f_night[charName.slayer] = 0;
o_night[charName.slayer] = 0;
amy_order[charName.slayer] = amyOrder.dayOncePerGame

charCode[charName.soldier] = "soldier"
charIcon[charName.soldier] = SprSoldier
charTitle[charName.soldier] = "Солдат"
charDesc[charName.soldier] = "Демон не может навредить вам."
charSet[charName.soldier] = setName.troubleBrewing;
group[charName.soldier] = charGroup.townsfolk;
f_night[charName.soldier] = 0;
o_night[charName.soldier] = 0;
amy_order[charName.soldier] = amyOrder.passive

charCode[charName.spy] = "spy"
charIcon[charName.spy] = SprSpy
charTitle[charName.spy] = "Шпион"
charDesc[charName.spy] = "Вас можно посчитать Добрым, Горожанином или Посторонним, даже если мертвы. Каждую ночь вы смотрите Гримуар."
charSet[charName.spy] = setName.troubleBrewing;
group[charName.spy] = charGroup.minion;
f_night[charName.spy] = 50;
o_night[charName.spy] = 67;
amy_order[charName.spy] = amyOrder.everyNight

charCode[charName.undertaker] = "undertaker"
charIcon[charName.undertaker] = SprUndertaker
charTitle[charName.undertaker] = "Гробовщик"
charDesc[charName.undertaker] = "Каждую ночь* вы узнаёте какой персонаж днём умер от казни."
charSet[charName.undertaker] = setName.troubleBrewing;
group[charName.undertaker] = charGroup.townsfolk;
f_night[charName.undertaker] = 0;
o_night[charName.undertaker] = 54;
amy_order[charName.undertaker] = amyOrder.everyNightAsterisk

charCode[charName.virgin] = "virgin"
charIcon[charName.virgin] = SprVirgin
charTitle[charName.virgin] = "Дева"
charDesc[charName.virgin] = "Когда вас номинируют в первый раз, если это сделал Горожанин, он сразу же будет казнён."
charSet[charName.virgin] = setName.troubleBrewing;
group[charName.virgin] = charGroup.townsfolk;
f_night[charName.virgin] = 0;
o_night[charName.virgin] = 0;
amy_order[charName.virgin] = amyOrder.dayOncePerGame

charCode[charName.washerwoman] = "washerwoman"
charIcon[charName.washerwoman] = SprWasherwoman
charTitle[charName.washerwoman] = "Прачка"
charDesc[charName.washerwoman] = "В начале вы знаете, что один из двух игроков - конкретный Горожанин."
charSet[charName.washerwoman] = setName.troubleBrewing;
group[charName.washerwoman] = charGroup.townsfolk;
f_night[charName.washerwoman] = 32;
o_night[charName.washerwoman] = 0;
amy_order[charName.washerwoman] = amyOrder.firstNight

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Bad Moon Rising

charCode[charName.assassin] = "assassin"
charIcon[charName.assassin] = SprAssassin
charTitle[charName.assassin] = "Ассасин"
charDesc[charName.assassin] = "Раз в игру, ночью*, выберите игрока. Этот игрок умирает, даже если по какой-то причине не мог."
charSet[charName.assassin] = setName.badMoonRising;
group[charName.assassin] = charGroup.minion;
f_night[charName.assassin] = 0;
o_night[charName.assassin] = 35;
amy_order[charName.assassin] = amyOrder.oncePerGame

charCode[charName.chambermaid] = "chambermaid"
charIcon[charName.chambermaid] = SprChambermaid
charTitle[charName.chambermaid] = "Служанка"
charDesc[charName.chambermaid] = "Каждую ночь вы выбираете 2 живых игроков (не себя). Вы узнаёте, сколько из них проснулось ночью из-за своей способности."
charSet[charName.chambermaid] = setName.badMoonRising;
group[charName.chambermaid] = charGroup.townsfolk;
f_night[charName.chambermaid] = 52;
o_night[charName.chambermaid] = 69;
amy_order[charName.chambermaid] = amyOrder.everyNight

charCode[charName.courtier] = "courtier"
charIcon[charName.courtier] = SprCourtier
charTitle[charName.courtier] = "Придворный"
charDesc[charName.courtier] = "Раз в игру, ночью, выберите персонажа. Этот персонаж пьян 3 ночи и 3 дня."
charSet[charName.courtier] = setName.badMoonRising;
group[charName.courtier] = charGroup.townsfolk;
f_night[charName.courtier] = 18;
o_night[charName.courtier] = 7;
amy_order[charName.courtier] = amyOrder.oncePerGame

charCode[charName.devilsadvocate] = "devils_advocate"
charIcon[charName.devilsadvocate] = SprDevilsAdvocate
charTitle[charName.devilsadvocate] = "Адвокат дьявола"
charDesc[charName.devilsadvocate] = "Каждую ночь вы выбираете живого игрока (не того же, что и в прошлую ночь). Если его казнят на следующий день, он не умирает."
charSet[charName.devilsadvocate] = setName.badMoonRising;
group[charName.devilsadvocate] = charGroup.minion;
f_night[charName.devilsadvocate] = 21;
o_night[charName.devilsadvocate] = 12;
amy_order[charName.devilsadvocate] = amyOrder.everyNight

charCode[charName.exorcist] = "exorcist"
charIcon[charName.exorcist] = SprExorcist
charTitle[charName.exorcist] = "Экзорцист"
charDesc[charName.exorcist] = "Каждую ночь* вы выбираете игрока (не того же, что и в прошлую ночь). Если выбран Демон, то он узнаёт, что вы Экзорцист, и не просыпается ночью."
charSet[charName.exorcist] = setName.badMoonRising;
group[charName.exorcist] = charGroup.townsfolk;
f_night[charName.exorcist] = 0;
o_night[charName.exorcist] = 20;
amy_order[charName.exorcist] = amyOrder.everyNightAsterisk

charCode[charName.fool] = "fool"
charIcon[charName.fool] = SprFool
charTitle[charName.fool] = "Шут"
charDesc[charName.fool] = "В первый раз, когда вы умираете, вы не умираете."
charSet[charName.fool] = setName.badMoonRising;
group[charName.fool] = charGroup.townsfolk;
f_night[charName.fool] = 0;
o_night[charName.fool] = 0;
amy_order[charName.fool] = amyOrder.passive

charCode[charName.gambler] = "gambler"
charIcon[charName.gambler] = SprGambler
charTitle[charName.gambler] = "Картёжник"
charDesc[charName.gambler] = "Каждую ночь* вы выбираете игрока и угадываете его персонажа. Если вы не угадали, вы умираете."
charSet[charName.gambler] = setName.badMoonRising;
group[charName.gambler] = charGroup.townsfolk;
f_night[charName.gambler] = 0;
o_night[charName.gambler] = 9;
amy_order[charName.gambler] = amyOrder.everyNightAsterisk

charCode[charName.godfather] = "godfather"
charIcon[charName.godfather] = SprGodfather
charTitle[charName.godfather] = "Крёстный отец"
charDesc[charName.godfather] = "Вы знаете, какие Посторонние в игре. Каждую ночь, если днём Посторонний умер, выберите игрока, этот игрок умирает. [-1/+1 Посторонний]"
charSet[charName.godfather] = setName.badMoonRising;
group[charName.godfather] = charGroup.minion;
f_night[charName.godfather] = 20;
o_night[charName.godfather] = 36;
amy_order[charName.godfather] = amyOrder.everyNight

charCode[charName.goon] = "goon"
charIcon[charName.goon] = SprGoon
charTitle[charName.goon] = "Наёмник"
charDesc[charName.goon] = "Каждую ночь первый игрок, который выбирает вас целью своей способности, пьянеет до заката. Вы переходите на его сторону."
charSet[charName.goon] = setName.badMoonRising;
group[charName.goon] = charGroup.outsider;
f_night[charName.goon] = 0;
o_night[charName.goon] = 0;
amy_order[charName.goon] = amyOrder.passive

charCode[charName.gossip] = "gossip"
charIcon[charName.gossip] = SprGossip
charTitle[charName.gossip] = "Сплетник"
charDesc[charName.gossip] = "Каждый день, публично сделайте заявление. Если это была правда, ночью умрёт игрок."
charSet[charName.gossip] = setName.badMoonRising;
group[charName.gossip] = charGroup.townsfolk;
f_night[charName.gossip] = 0;
o_night[charName.gossip] = 37;
amy_order[charName.gossip] = amyOrder.dayActions

charCode[charName.grandmother] = "grandmother"
charIcon[charName.grandmother] = SprGrandmother
charTitle[charName.grandmother] = "Бабушка"
charDesc[charName.grandmother] = "В начале вы узнаёте одного Доброго игрока и его персонажа. Если его убьёт Демон, вы тоже умираете."
charSet[charName.grandmother] = setName.badMoonRising;
group[charName.grandmother] = charGroup.townsfolk;
f_night[charName.grandmother] = 39;
o_night[charName.grandmother] = 50;
amy_order[charName.grandmother] = amyOrder.firstNight

charCode[charName.innkeeper] = "innkeeper"
charIcon[charName.innkeeper] = SprInnkeeper
charTitle[charName.innkeeper] = "Трактирщик"
charDesc[charName.innkeeper] = "Каждую ночь* вы выбираете 2 игроков. Они не могут умереть этой ночью, но 1 из них пьян до заката."
charSet[charName.innkeeper] = setName.badMoonRising;
group[charName.innkeeper] = charGroup.townsfolk;
f_night[charName.innkeeper] = 0;
o_night[charName.innkeeper] = 8;
amy_order[charName.innkeeper] = amyOrder.everyNightAsterisk

charCode[charName.lunatic] = "lunatic"
charIcon[charName.lunatic] = SprLunatic
charTitle[charName.lunatic] = "Лунатик"
charDesc[charName.lunatic] = "Вы думаете, что вы Демон, но это не так. Демон знает, что вы Лунатик, и знает, кого вы выбираете ночью."
charSet[charName.lunatic] = setName.badMoonRising;
group[charName.lunatic] = charGroup.outsider;
f_night[charName.lunatic] = 7;
o_night[charName.lunatic] = 19;
amy_order[charName.lunatic] = amyOrder.passive

charCode[charName.mastermind] = "mastermind"
charIcon[charName.mastermind] = SprMastermind
charTitle[charName.mastermind] = "Руководитель"
charDesc[charName.mastermind] = "Если Демон умер из-за казни, игра продолжается ещё один день. Если за этот день кого-то казнят, его команда проигрывают."
charSet[charName.mastermind] = setName.badMoonRising;
group[charName.mastermind] = charGroup.minion;
f_night[charName.mastermind] = 0;
o_night[charName.mastermind] = 0;
amy_order[charName.mastermind] = amyOrder.triggerOncePerGame

charCode[charName.minstrel] = "minstrel"
charIcon[charName.minstrel] = SprMinstrel
charTitle[charName.minstrel] = "Менестрель"
charDesc[charName.minstrel] = "Если от казни умер Приспешник, все другие игроки (кроме Путников) пьяны до завтрашнего заката."
charSet[charName.minstrel] = setName.badMoonRising;
group[charName.minstrel] = charGroup.townsfolk;
f_night[charName.minstrel] = 0;
o_night[charName.minstrel] = 0;
amy_order[charName.minstrel] = amyOrder.passive

charCode[charName.moonchild] = "moonchild"
charIcon[charName.moonchild] = SprMoonchild
charTitle[charName.moonchild] = "Дитя луны"
charDesc[charName.moonchild] = "Когда вы узнаёте, что умерли, публично выберите одного живого игрока. Если он Добрый, он умирает ночью."
charSet[charName.moonchild] = setName.badMoonRising;
group[charName.moonchild] = charGroup.outsider;
f_night[charName.moonchild] = 0;
o_night[charName.moonchild] = 49;
amy_order[charName.moonchild] = amyOrder.triggerOncePerGame

charCode[charName.pacifist] = "pacifist"
charIcon[charName.pacifist] = SprPacifist
charTitle[charName.pacifist] = "Пацифист"
charDesc[charName.pacifist] = "Казнённые Добрые игроки могут не умереть."
charSet[charName.pacifist] = setName.badMoonRising;
group[charName.pacifist] = charGroup.townsfolk;
f_night[charName.pacifist] = 0;
o_night[charName.pacifist] = 0;
amy_order[charName.pacifist] = amyOrder.passive

charCode[charName.po] = "po"
charIcon[charName.po] = SprPo
charTitle[charName.po] = "По"
charDesc[charName.po] = "Каждую ночь* вы выбираете игрока. Этот игрок умирает. Если в последний раз вы никого не выбирали, выберите 3 игроков."
charSet[charName.po] = setName.badMoonRising;
group[charName.po] = charGroup.demon;
f_night[charName.po] = 0;
o_night[charName.po] = 27;
amy_order[charName.po] = amyOrder.everyNightAsterisk

charCode[charName.professor] = "professor"
charIcon[charName.professor] = SprProfessor
charTitle[charName.professor] = "Профессор"
charDesc[charName.professor] = "Раз в игру, ночью*, выберите мёртвого игрока. Если это Горожанин, он воскрешается."
charSet[charName.professor] = setName.badMoonRising;
group[charName.professor] = charGroup.townsfolk;
f_night[charName.professor] = 0;
o_night[charName.professor] = 42;
amy_order[charName.professor] = amyOrder.oncePerGame

charCode[charName.pukka] = "pukka"
charIcon[charName.pukka] = SprPukka
charTitle[charName.pukka] = "Пукка"
charDesc[charName.pukka] = "Каждую ночь вы выбираете игрока. Этот игрок отравлен. Предыдущий отравленный игрок умирает, затем становится здоровым."
charSet[charName.pukka] = setName.badMoonRising;
group[charName.pukka] = charGroup.demon;
f_night[charName.pukka] = 27;
o_night[charName.pukka] = 24;
amy_order[charName.pukka] = amyOrder.everyNightAsterisk

charCode[charName.sailor] = "sailor"
charIcon[charName.sailor] = SprSailor
charTitle[charName.sailor] = "Моряк"
charDesc[charName.sailor] = "Каждую ночь вы выбираете живого игрока, либо он, либо вы пьяны до следующего заката. Вы не можете умереть."
charSet[charName.sailor] = setName.badMoonRising;
group[charName.sailor] = charGroup.townsfolk;
f_night[charName.sailor] = 10;
o_night[charName.sailor] = 2;
amy_order[charName.sailor] = amyOrder.everyNight

charCode[charName.shabaloth] = "shabaloth"
charIcon[charName.shabaloth] = SprShabaloth
charTitle[charName.shabaloth] = "Шабалот"
charDesc[charName.shabaloth] = "Каждую ночь* вы выбираете 2 игроков. Они умирают. Мёртвый игрок, которого вы выбирали прошлой ночью может быть извергнут."
charSet[charName.shabaloth] = setName.badMoonRising;
group[charName.shabaloth] = charGroup.demon;
f_night[charName.shabaloth] = 0;
o_night[charName.shabaloth] = 26;
amy_order[charName.shabaloth] = amyOrder.everyNightAsterisk

charCode[charName.tealady] = "tea_lady"
charIcon[charName.tealady] = SprTeaLady
charTitle[charName.tealady] = "Чайная леди"
charDesc[charName.tealady] = "Если оба ваших соседа Добрые, они не могут умереть."
charSet[charName.tealady] = setName.badMoonRising;
group[charName.tealady] = charGroup.townsfolk;
f_night[charName.tealady] = 0;
o_night[charName.tealady] = 0;
amy_order[charName.tealady] = amyOrder.passive

charCode[charName.tinker] = "tinker"
charIcon[charName.tinker] = SprTinker
charTitle[charName.tinker] = "Умелец"
charDesc[charName.tinker] = "Вы можете умереть в любой момент."
charSet[charName.tinker] = setName.badMoonRising;
group[charName.tinker] = charGroup.outsider;
f_night[charName.tinker] = 0;
o_night[charName.tinker] = 48;
amy_order[charName.tinker] = amyOrder.passive

charCode[charName.zombuul] = "zombuul"
charIcon[charName.zombuul] = SprZombuul
charTitle[charName.zombuul] = "Зомбуул"
charDesc[charName.zombuul] = "Каждую ночь* если днём никто не умер, выберите игрока. Этот игрок умирает. Первый раз, когда вы умираете, вы остаётесь в живых, но считается, что вы умерли."
charSet[charName.zombuul] = setName.badMoonRising;
group[charName.zombuul] = charGroup.demon;
f_night[charName.zombuul] = 0;
o_night[charName.zombuul] = 25;
amy_order[charName.zombuul] = amyOrder.everyNightAsterisk

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sects &amp; Violets

charCode[charName.artist] = "artist"
charIcon[charName.artist] = SprArtist
charTitle[charName.artist] = "Художник"
charDesc[charName.artist] = "Раз в игру, днём, вы можете посетить Рассказчика и спросить любой вопрос, на который можно ответить Да/Нет."
charSet[charName.artist] = setName.sectsAndViolets;
group[charName.artist] = charGroup.townsfolk;
f_night[charName.artist] = 0;
o_night[charName.artist] = 0;
amy_order[charName.artist] = amyOrder.dayOncePerGame;

charCode[charName.barber] = "barber"
charIcon[charName.barber] = SprBarber
charTitle[charName.barber] = "Парикмахер"
charDesc[charName.barber] = "Если вы умираете, в эту ночь Демон может выбрать 2 игроков (не другого Демона), эти игроки меняются персонажами."
charSet[charName.barber] = setName.sectsAndViolets;
group[charName.barber] = charGroup.outsider;
f_night[charName.barber] = 0;
o_night[charName.barber] = 39;
amy_order[charName.barber] = amyOrder.triggerOncePerGame;

charCode[charName.cerenovus] = "cerenovus"
charIcon[charName.cerenovus] = SprCerenovus
charTitle[charName.cerenovus] = "Манипулятор"
charDesc[charName.cerenovus] = 'Каждую ночь вы выбираете игрока и Доброго персонажа. Выбранный игрок должен "спятить", что он - выбранный персонаж, иначе может быть казнён.'
charSet[charName.cerenovus] = setName.sectsAndViolets;
group[charName.cerenovus] = charGroup.minion;
f_night[charName.cerenovus] = 24;
o_night[charName.cerenovus] = 14;
amy_order[charName.cerenovus] = amyOrder.everyNight;

charCode[charName.clockmaker] = "clockmaker"
charIcon[charName.clockmaker] = SprClockmaker
charTitle[charName.clockmaker] = "Часовщик"
charDesc[charName.clockmaker] = "В начале вы узнаёте, сколько шагов отделяет Демона от его ближайшего Приспешника."
charSet[charName.clockmaker] = setName.sectsAndViolets;
group[charName.clockmaker] = charGroup.townsfolk;
f_night[charName.clockmaker] = 40;
o_night[charName.clockmaker] = 0;
amy_order[charName.clockmaker] = amyOrder.firstNight;

charCode[charName.dreamer] = "dreamer"
charIcon[charName.dreamer] = SprDreamer
charTitle[charName.dreamer] = "Мечтатель"
charDesc[charName.dreamer] = "Каждую ночь вы выбираете игрока (не себя). Вы узнаёте 1 Доброго и 1 Злого персонажей. Этот игрок является одним из них."
charSet[charName.dreamer] = setName.sectsAndViolets;
group[charName.dreamer] = charGroup.townsfolk;
f_night[charName.dreamer] = 41;
o_night[charName.dreamer] = 55;
amy_order[charName.dreamer] = amyOrder.everyNight;

charCode[charName.eviltwin] = "evil_twin"
charIcon[charName.eviltwin] = SprEvilTwin
charTitle[charName.eviltwin] = "Злой близнец"
charDesc[charName.eviltwin] = "Вы и игрок другой команды знаете друг друга. Если Доброго игрока из вас казнят, Зло побеждает. Пока оба живы, Добро не может победить."
charSet[charName.eviltwin] = setName.sectsAndViolets;
group[charName.eviltwin] = charGroup.minion;
f_night[charName.eviltwin] = 22;
o_night[charName.eviltwin] = 0;
amy_order[charName.eviltwin] = amyOrder.passive;

charCode[charName.fanggu] = "fang_gu"
charIcon[charName.fanggu] = SprFangGu
charTitle[charName.fanggu] = "Фэнг Гу"
charDesc[charName.fanggu] = "Каждую ночь* выбираете игрока. Этот игрок умирает. Если так 1-ый раз выбрали Постороннего он становится Злым Фэнг Гу и вместо него умираете вы. [+1 Посторонний]"
charSet[charName.fanggu] = setName.sectsAndViolets;
group[charName.fanggu] = charGroup.demon;
f_night[charName.fanggu] = 0;
o_night[charName.fanggu] = 28;
amy_order[charName.fanggu] = amyOrder.everyNightAsterisk;

charCode[charName.flowergirl] = "flowergirl"
charIcon[charName.flowergirl] = SprFlowerGirl
charTitle[charName.flowergirl] = "Цветочница"
charDesc[charName.flowergirl] = "Каждую ночь* вы узнаёте, голосовал ли сегодня Демон."
charSet[charName.flowergirl] = setName.sectsAndViolets;
group[charName.flowergirl] = charGroup.townsfolk;
f_night[charName.flowergirl] = 0;
o_night[charName.flowergirl] = 56;
amy_order[charName.flowergirl] = amyOrder.everyNightAsterisk;

charCode[charName.juggler] = "juggler"
charIcon[charName.juggler] = SprJuggler
charTitle[charName.juggler] = "Жонглёр"
charDesc[charName.juggler] = "В первый свой день, публично угадайте до 5 персонажей у игроков. Ночью вы узнаете, сколько угадали."
charSet[charName.juggler] = setName.sectsAndViolets;
group[charName.juggler] = charGroup.townsfolk;
f_night[charName.juggler] = 0;
o_night[charName.juggler] = 60;
amy_order[charName.juggler] = amyOrder.dayOncePerGame;

charCode[charName.klutz] = "klutz"
charIcon[charName.klutz] = SprKlutz
charTitle[charName.klutz] = "Недотёпа"
charDesc[charName.klutz] = "Когда вы узнаёте, что вы умерли, публично выберите живого игрока. Если вы выбрали Злодея, ваша команда проигрывает."
charSet[charName.klutz] = setName.sectsAndViolets;
group[charName.klutz] = charGroup.outsider;
f_night[charName.klutz] = 0;
o_night[charName.klutz] = 0;
amy_order[charName.klutz] = amyOrder.triggerOncePerGame;

charCode[charName.mathematician] = "mathematician"
charIcon[charName.mathematician] = SprMathematician
charTitle[charName.mathematician] = "Математик"
charDesc[charName.mathematician] = "Каждую ночь вы узнаёте, сколько способностей других игроков сработали ненормально (начиная с рассвета) из-за способностей других персонажей."
charSet[charName.mathematician] = setName.sectsAndViolets;
group[charName.mathematician] = charGroup.townsfolk;
f_night[charName.mathematician] = 53;
o_night[charName.mathematician] = 70;
amy_order[charName.mathematician] = amyOrder.everyNight;

charCode[charName.mutant] = "mutant"
charIcon[charName.mutant] = SprMutant
charTitle[charName.mutant] = "Мутант"
charDesc[charName.mutant] = 'Если вы "спятили" по поводу того, что вы Посторонний, вас могут казнить.'
charSet[charName.mutant] = setName.sectsAndViolets;
group[charName.mutant] = charGroup.outsider;
f_night[charName.mutant] = 0;
o_night[charName.mutant] = 0;
amy_order[charName.mutant] = amyOrder.passive;

charCode[charName.nodashii] = "no_dashii"
charIcon[charName.nodashii] = SprNoDashii
charTitle[charName.nodashii] = "Но Дашии"
charDesc[charName.nodashii] = "Каждую ночь* вы выбираете игрока. Этот игрок умирает. Ваши 2 соседа Горожанина отравлены."
charSet[charName.nodashii] = setName.sectsAndViolets;
group[charName.nodashii] = charGroup.demon;
f_night[charName.nodashii] = 0;
o_night[charName.nodashii] = 29;
amy_order[charName.nodashii] = amyOrder.everyNightAsterisk;

charCode[charName.oracle] = "oracle"
charIcon[charName.oracle] = SprOracle
charTitle[charName.oracle] = "Оракул"
charDesc[charName.oracle] = "Каждую ночь* вы узнаёте, сколько мёртвых игроков Злодеи."
charSet[charName.oracle] = setName.sectsAndViolets;
group[charName.oracle] = charGroup.townsfolk;
f_night[charName.oracle] = 0;
o_night[charName.oracle] = 58;
amy_order[charName.oracle] = amyOrder.everyNightAsterisk;

charCode[charName.philosopher] = "philosopher"
charIcon[charName.philosopher] = SprPhilosopher
charTitle[charName.philosopher] = "Философ"
charDesc[charName.philosopher] = "Раз в игру, ночью, выберите Доброго персонажа. Вы получаете его способность. Если в игре есть такой персонаж, он становятся пьяными."
charSet[charName.philosopher] = setName.sectsAndViolets;
group[charName.philosopher] = charGroup.townsfolk;
f_night[charName.philosopher] = 1;
o_night[charName.philosopher] = 1;
amy_order[charName.philosopher] = amyOrder.oncePerGame;

charCode[charName.pithag] = "pit-hag"
charIcon[charName.pithag] = SprPitHag
charTitle[charName.pithag] = "Колдунья"
charDesc[charName.pithag] = "Каждую ночь* вы выбираете игрока и персонажа, в котрого он превращается (если такого персонажа нет в игре). Если сделан Демон, смерти этой ночью выбирает Рассказчик."
charSet[charName.pithag] = setName.sectsAndViolets;
group[charName.pithag] = charGroup.minion;
f_night[charName.pithag] = 0;
o_night[charName.pithag] = 15;
amy_order[charName.pithag] = amyOrder.everyNightAsterisk;

charCode[charName.sage] = "sage"
charIcon[charName.sage] = SprSage
charTitle[charName.sage] = "Мудрец"
charDesc[charName.sage] = "Если Демон убьёт вас, вы узнаете, что это 1 из 2 игроков."
charSet[charName.sage] = setName.sectsAndViolets;
group[charName.sage] = charGroup.townsfolk;
f_night[charName.sage] = 0;
o_night[charName.sage] = 41;
amy_order[charName.sage] = amyOrder.triggerOncePerGame;

charCode[charName.savant] = "savant"
charIcon[charName.savant] = SprSavant
charTitle[charName.savant] = "Учённый"
charDesc[charName.savant] = "Каждый день вы можете посетить Рассказчика, чтобы узнать 2 факта. Один правдивый, другой ложный."
charSet[charName.savant] = setName.sectsAndViolets;
group[charName.savant] = charGroup.townsfolk;
f_night[charName.savant] = 0;
o_night[charName.savant] = 0;
amy_order[charName.savant] = amyOrder.dayActions;

charCode[charName.seamstress] = "seamstress"
charIcon[charName.seamstress] = SprSeamstress
charTitle[charName.seamstress] = "Швея"
charDesc[charName.seamstress] = "Раз в игру, ночью, выберите 2 игроков (не себя). Вы узнаёте, на одной ли они стороне."
charSet[charName.seamstress] = setName.sectsAndViolets;
group[charName.seamstress] = charGroup.townsfolk;
f_night[charName.seamstress] = 42;
o_night[charName.seamstress] = 59;
amy_order[charName.seamstress] = amyOrder.oncePerGame;

charCode[charName.snakecharmer] = "snake_charmer"
charIcon[charName.snakecharmer] = SprSnakeCharmer
charTitle[charName.snakecharmer] = "Заклинатель змей"
charDesc[charName.snakecharmer] = "Каждую ночь вы выбираете живого игрока. Если этот игрок Демон, он меняется с вами сторонами, персонажами и становится отравлен."
charSet[charName.snakecharmer] = setName.sectsAndViolets;
group[charName.snakecharmer] = charGroup.townsfolk;
f_night[charName.snakecharmer] = 19;
o_night[charName.snakecharmer] = 10;
amy_order[charName.snakecharmer] = amyOrder.everyNight;

charCode[charName.sweetheart] = "sweetheart"
charIcon[charName.sweetheart] = SprSweetheart
charTitle[charName.sweetheart] = "Возлюбленная"
charDesc[charName.sweetheart] = "Если вы умираете, один из игроков пьянеет."
charSet[charName.sweetheart] = setName.sectsAndViolets;
group[charName.sweetheart] = charGroup.outsider;
f_night[charName.sweetheart] = 0;
o_night[charName.sweetheart] = 40;
amy_order[charName.sweetheart] = amyOrder.triggerOncePerGame;

charCode[charName.towncrier] = "town_crier"
charIcon[charName.towncrier] = SprTownCrier
charTitle[charName.towncrier] = "Глашатай"
charDesc[charName.towncrier] = "Каждую ночь* вы узнаёте, номинировал ли кого-то Приспешник."
charSet[charName.towncrier] = setName.sectsAndViolets;
group[charName.towncrier] = charGroup.townsfolk;
f_night[charName.towncrier] = 0;
o_night[charName.towncrier] = 57;
amy_order[charName.towncrier] = amyOrder.everyNightAsterisk;

charCode[charName.vigormortis] = "vigormortis"
charIcon[charName.vigormortis] = SprVigormortis
charTitle[charName.vigormortis] = "Вигормортис"
charDesc[charName.vigormortis] = "Каждую ночь* вы выбираете игрока. Этот игрок умирает. Убитые вами Приспешники оставляют свою способность и отравляют 1 соседа Горожанина. [-1 Посторонний]"
charSet[charName.vigormortis] = setName.sectsAndViolets;
group[charName.vigormortis] = charGroup.demon;
f_night[charName.vigormortis] = 0;
o_night[charName.vigormortis] = 31;
amy_order[charName.vigormortis] = amyOrder.everyNightAsterisk;

charCode[charName.vortox] = "vortox"
charIcon[charName.vortox] = SprVortox
charTitle[charName.vortox] = "Вортокс"
charDesc[charName.vortox] = "Каждую ночь* вы выбираете игрока. Этот игрок умирает. Вся получаемая способностями Горожан информация будет ложной. Если днём никого не казнили, Зло побеждает."
charSet[charName.vortox] = setName.sectsAndViolets;
group[charName.vortox] = charGroup.demon;
f_night[charName.vortox] = 0;
o_night[charName.vortox] = 30;
amy_order[charName.vortox] = amyOrder.everyNightAsterisk;

charCode[charName.witch] = "witch"
charIcon[charName.witch] = SprWitch
charTitle[charName.witch] = "Ведьма"
charDesc[charName.witch] = "Каждую ночь вы выбираете игрока. Если он номинирует на следующий день, он умирает. Если в живых только 3 игрока, вы теряете эту способность."
charSet[charName.witch] = setName.sectsAndViolets;
group[charName.witch] = charGroup.minion;
f_night[charName.witch] = 23;
o_night[charName.witch] = 13;
amy_order[charName.witch] = amyOrder.everyNight;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Experimental

charCode[charName.acrobat] = "acrobat"
charIcon[charName.acrobat] = SprAcrobat
charTitle[charName.acrobat] = "Акробат"
charDesc[charName.acrobat] = "Каждую ночь* если один из ваших живых соседей отравлен или пьян, вы умираете."
charSet[charName.acrobat] = setName.experimental;
group[charName.acrobat] = charGroup.outsider;
f_night[charName.acrobat] = 0;
o_night[charName.acrobat] = 38;
amy_order[charName.acrobat] = amyOrder.everyNightAsterisk;

charCode[charName.alchemist] = "alchemist"
charIcon[charName.alchemist] = SprAlchemist
charTitle[charName.alchemist] = "Алхимик"
charDesc[charName.alchemist] = "У вас способность Приспешника, которого нет в игре."
charSet[charName.alchemist] = setName.experimental;
group[charName.alchemist] = charGroup.townsfolk;
f_night[charName.alchemist] = 2;
o_night[charName.alchemist] = 0;
amy_order[charName.alchemist] = amyOrder.passive;

charCode[charName.alhadikhia] = "al-hadikhia"
charIcon[charName.alhadikhia] = SprAlHadikhia
charTitle[charName.alhadikhia] = "Аль-Хадика"
charDesc[charName.alhadikhia] = "Каждую ночь* выберите 3 игроков (все узнают кого). Каждый в тайне выбирает жить или умереть. Если все выбрали жить, все умирают."
charSet[charName.alhadikhia] = setName.experimental;
group[charName.alhadikhia] = charGroup.demon;
f_night[charName.alhadikhia] = 0;
o_night[charName.alhadikhia] = 32;
amy_order[charName.alhadikhia] = amyOrder.everyNightAsterisk;

charCode[charName.amnesiac] = "amnesiac"
charIcon[charName.amnesiac] = SprAmnesiac
charTitle[charName.amnesiac] = "Амнезиак"
charDesc[charName.amnesiac] = "Вы не знаете свою способность. Каждый день можете посетить рассказчика и угадать какая у вас способность: вы узнаете насколько это точно."
charSet[charName.amnesiac] = setName.experimental;
group[charName.amnesiac] = charGroup.townsfolk;
f_night[charName.amnesiac] = 31;
o_night[charName.amnesiac] = 46;
amy_order[charName.amnesiac] = amyOrder.dayActions;

charCode[charName.atheist] = "atheist"
charIcon[charName.atheist] = SprAtheist
charTitle[charName.atheist] = "Атеист"
charDesc[charName.atheist] = "Рассказчик может нарушать правила игры. Если его казнить, Добро побеждает. Работает даже если вы мертвы. [Злодеи не добавляются]"
charSet[charName.atheist] = setName.experimental;
group[charName.atheist] = charGroup.townsfolk;
f_night[charName.atheist] = 0;
o_night[charName.atheist] = 0;
amy_order[charName.atheist] = amyOrder.passive;

charCode[charName.balloonist] = "balloonist"
charIcon[charName.balloonist] = SprBalloonist
charTitle[charName.balloonist] = "Аэронавт"
charDesc[charName.balloonist] = "Каждую ночь вы узнаёте по 1 игроку каждой группы персонажей в игре, пока они не закончатся. [+1 посторонний]"
charSet[charName.balloonist] = setName.experimental;
group[charName.balloonist] = charGroup.townsfolk;
f_night[charName.balloonist] = 46;
o_night[charName.balloonist] = 61;
amy_order[charName.balloonist] = amyOrder.everyNight;

charCode[charName.boomdandy] = "boomdandy"
charIcon[charName.boomdandy] = SprBoomdandy
charTitle[charName.boomdandy] = "Подрывник"
charDesc[charName.boomdandy] = "Если вас казнят, все кроме 3 игроков умирают. Через 1 минуту, игрок на которого показывают больше всего игроков умирает."
charSet[charName.boomdandy] = setName.experimental;
group[charName.boomdandy] = charGroup.minion;
f_night[charName.boomdandy] = 0;
o_night[charName.boomdandy] = 0;
amy_order[charName.boomdandy] = amyOrder.triggerOncePerGame;

charCode[charName.bountyhunter] = "bounty_hunter"
charIcon[charName.bountyhunter] = SprBountyHunter
charTitle[charName.bountyhunter] = "Охотник за головами"
charDesc[charName.bountyhunter] = "В начале вы знаете 1 игрока Злодея. Если этот игрок умирает, вы узнаёте другого игрока Злодея этой ночью. [1 Горожанин Злой]"
charSet[charName.bountyhunter] = setName.experimental;
group[charName.bountyhunter] = charGroup.townsfolk;
f_night[charName.bountyhunter] = 47;
o_night[charName.bountyhunter] = 63;
amy_order[charName.bountyhunter] = amyOrder.firstAndEveryNight

charCode[charName.cannibal] = "cannibal"
charIcon[charName.cannibal] = SprCannibal
charTitle[charName.cannibal] = "Каннибал"
charDesc[charName.cannibal] = "У вас есть способность последнего убитого через казнь. Если этот игрок Злодей, вы отравлены, пока Добрый игрок не умрёт от казни."
charSet[charName.cannibal] = setName.experimental;
group[charName.cannibal] = charGroup.townsfolk;
f_night[charName.cannibal] = 0;
o_night[charName.cannibal] = 0;
amy_order[charName.cannibal] = amyOrder.passive

charCode[charName.choirboy] = "choirboy"
charIcon[charName.choirboy] = SprChoirBoy
charTitle[charName.choirboy] = "Мальчик хорист"
charDesc[charName.choirboy] = "Если Демон убивает Короля, вы узнаёте, кто из игроков Демон. [+Король]"
charSet[charName.choirboy] = setName.experimental;
group[charName.choirboy] = charGroup.townsfolk;
f_night[charName.choirboy] = 0;
o_night[charName.choirboy] = 43;
amy_order[charName.choirboy] = amyOrder.triggerOncePerGame

charCode[charName.cultleader] = "cult_leader"
charIcon[charName.cultleader] = SprCultLeader
charTitle[charName.cultleader] = "Лидер культа"
charDesc[charName.cultleader] = "Каждую ночь вы переходите на сторону одного из живых соседей. Если все Добрые игроки выберут вступить в ваш культ, ваша команда побеждает."
charSet[charName.cultleader] = setName.experimental;
group[charName.cultleader] = charGroup.townsfolk;
f_night[charName.cultleader] = 49;
o_night[charName.cultleader] = 65;
amy_order[charName.cultleader] = amyOrder.dayActions

charCode[charName.damsel] = "damsel"
charIcon[charName.damsel] = SprDamsel
charTitle[charName.damsel] = "Мадам"
charDesc[charName.damsel] = "Все приспешники знают, что вы есть в игре. Если приспешник публично угадает вас (один раз за игру), ваша команда проигрывает."
charSet[charName.damsel] = setName.experimental;
group[charName.damsel] = charGroup.outsider;
f_night[charName.damsel] = 30;
o_night[charName.damsel] = 45;
amy_order[charName.damsel] = amyOrder.passive

charCode[charName.engineer] = "engineer"
charIcon[charName.engineer] = SprEngineer
charTitle[charName.engineer] = "Инженер"
charDesc[charName.engineer] = "Раз в игру, ночью, выберите какой Демон или какие Приспешники в игре."
charSet[charName.engineer] = setName.experimental;
group[charName.engineer] = charGroup.townsfolk;
f_night[charName.engineer] = 12;
o_night[charName.engineer] = 4;
amy_order[charName.engineer] = amyOrder.oncePerGame

charCode[charName.farmer] = "farmer"
charIcon[charName.farmer] = SprFarmer
charTitle[charName.farmer] = "Фермер"
charDesc[charName.farmer] = "Если вы умираете ночью, живой Добрый игрок становится Фермером."
charSet[charName.farmer] = setName.experimental;
group[charName.farmer] = charGroup.townsfolk;
f_night[charName.farmer] = 0;
o_night[charName.farmer] = 47;
amy_order[charName.farmer] = amyOrder.passive

charCode[charName.fearmonger] = "fearmonger"
charIcon[charName.fearmonger] = SprFearmonger
charTitle[charName.fearmonger] = "Страшила"
charDesc[charName.fearmonger] = "Каждую ночь вы выбираете игрока: если вы номинировали его и его казнили, его команда проигрывает. Все игроки знают, если вы выбираете нового игрока."
charSet[charName.fearmonger] = setName.experimental;
group[charName.fearmonger] = charGroup.minion;
f_night[charName.fearmonger] = 25;
o_night[charName.fearmonger] = 17;
amy_order[charName.fearmonger] = amyOrder.everyNight

charCode[charName.fisherman] = "fisherman"
charIcon[charName.fisherman] = SprFisherman
charTitle[charName.fisherman] = "Рыбак"
charDesc[charName.fisherman] = "Раз в игру, днём, посетите рассказчика, чтобы получить совет по тому, как вашей команде победить."
charSet[charName.fisherman] = setName.experimental;
group[charName.fisherman] = charGroup.townsfolk;
f_night[charName.fisherman] = 0;
o_night[charName.fisherman] = 0;
amy_order[charName.fisherman] = amyOrder.dayOncePerGame

charCode[charName.general] = "general"
charIcon[charName.general] = SprGeneral
charTitle[charName.general] = "Генерал"
charDesc[charName.general] = "Каждую ночь вы узнаёте, какая сторона по мнению рассказчика выигрывает."
charSet[charName.general] = setName.experimental;
group[charName.general] = charGroup.townsfolk;
f_night[charName.general] = 51;
o_night[charName.general] = 68;
amy_order[charName.general] = amyOrder.everyNight

charCode[charName.goblin] = "goblin"
charIcon[charName.goblin] = SprGoblin
charTitle[charName.goblin] = "Гоблин"
charDesc[charName.goblin] = "Если, когда вас номинируют, вы публично объявите, что вы Гоблин, и вас казнят в этот день, ваша команда побеждает."
charSet[charName.goblin] = setName.experimental;
group[charName.goblin] = charGroup.minion;
f_night[charName.goblin] = 0;
o_night[charName.goblin] = 0;
amy_order[charName.goblin] = amyOrder.dayActions

charCode[charName.golem] = "golem"
charIcon[charName.golem] = SprGolem
charTitle[charName.golem] = "Голем"
charDesc[charName.golem] = "Вы можете номинировать только один раз за игру. Если вы номинировали игрока и он не Демон, он умирает."
charSet[charName.golem] = setName.experimental;
group[charName.golem] = charGroup.outsider;
f_night[charName.golem] = 0;
o_night[charName.golem] = 0;
amy_order[charName.golem] = amyOrder.dayOncePerGame

charCode[charName.heretic] = "heretic"
charIcon[charName.heretic] = SprHeretic
charTitle[charName.heretic] = "Еретик"
charDesc[charName.heretic] = "Тот, кто проигрывает, побеждает, и наоборот, даже если вы мертвы."
charSet[charName.heretic] = setName.experimental;
group[charName.heretic] = charGroup.outsider;
f_night[charName.heretic] = 0;
o_night[charName.heretic] = 0;
amy_order[charName.heretic] = amyOrder.passive

charCode[charName.huntsman] = "huntsman"
charIcon[charName.huntsman] = SprHuntsman
charTitle[charName.huntsman] = "Охотник"
charDesc[charName.huntsman] = "Раз за игру, ночью, выберите игрока: если выбрана Мадам, она становится Горожанином, которого нет в игре. [+Мадам]"
charSet[charName.huntsman] = setName.experimental;
group[charName.huntsman] = charGroup.townsfolk;
f_night[charName.huntsman] = 29;
o_night[charName.huntsman] = 44;
amy_order[charName.huntsman] = amyOrder.oncePerGame

charCode[charName.king] = "king"
charIcon[charName.king] = SprKing
charTitle[charName.king] = "Король"
charDesc[charName.king] = "Каждую ночь, если мёртвых больше, чем живых, вы узнаёте 1 персонажа живого игрока. Демон знает, кто вы."
charSet[charName.king] = setName.experimental;
group[charName.king] = charGroup.townsfolk;
f_night[charName.king] = 9;
o_night[charName.king] = 62;
amy_order[charName.king] = amyOrder.everyNight

charCode[charName.legion] = "legion"
charIcon[charName.legion] = SprLegion
charTitle[charName.legion] = "Легион"
charDesc[charName.legion] = "Каждую ночь* может умереть игрок. Номинации на казнь не срабатывают, если проголосуют только Злодеи. Вы также считаетесь Приспешником. [Большая часть игроков - Легион]"
charSet[charName.legion] = setName.experimental;
group[charName.legion] = charGroup.demon;
f_night[charName.legion] = 0;
o_night[charName.legion] = 22;
amy_order[charName.legion] = amyOrder.everyNightAsterisk

charCode[charName.leviathan] = "leviathan"
charIcon[charName.leviathan] = SprLeviathan
charTitle[charName.leviathan] = "Левиафан"
charDesc[charName.leviathan] = "Если казнено больше 1 Доброго игрока, Зло побеждает. Все игроки знают, что вы в игре. После 5 дня Зло побеждает."
charSet[charName.leviathan] = setName.experimental;
group[charName.leviathan] = charGroup.demon;
f_night[charName.leviathan] = 56;
o_night[charName.leviathan] = 72;
amy_order[charName.leviathan] = amyOrder.passive

charCode[charName.lilmonsta] = "lil_monsta"
charIcon[charName.lilmonsta] = SprLilMonsta
charTitle[charName.lilmonsta] = "Монстр Джуниор"
charDesc[charName.lilmonsta] = 'Каждую ночь Приспешники выбирают, кто из них нянчит Монстра Джуниора и "является Демоном". Игрок умирает каждую ночь*. [+1 Приспешник]'
charSet[charName.lilmonsta] = setName.experimental;
group[charName.lilmonsta] = charGroup.demon;
f_night[charName.lilmonsta] = 14;
o_night[charName.lilmonsta] = 34;
amy_order[charName.lilmonsta] = amyOrder.everyNight

charCode[charName.lleech] = "lleech"
charIcon[charName.lleech] = SprLleech
charTitle[charName.lleech] = "Ллич"
charDesc[charName.lleech] = "Каждую ночь* вы выбираете игрока: он умирает. В начале игры вы выбираете живого игрока: он отравлен, вы умираете если (и только если) он умрёт."
charSet[charName.lleech] = setName.experimental;
group[charName.lleech] = charGroup.demon;
f_night[charName.lleech] = 15;
o_night[charName.lleech] = 33;
amy_order[charName.lleech] = amyOrder.everyNight

charCode[charName.lycanthrope] = "lycanthrope"
charIcon[charName.lycanthrope] = SprLycanthrope
charTitle[charName.lycanthrope] = "Ликантроп"
charDesc[charName.lycanthrope] = "Каждую ночь* вы выбираете живого игрока: если он Добрый, он умирает, но это единственный игрок, который может умереть этой ночью."
charSet[charName.lycanthrope] = setName.experimental;
group[charName.lycanthrope] = charGroup.townsfolk;
f_night[charName.lycanthrope] = 0;
o_night[charName.lycanthrope] = 21;
amy_order[charName.lycanthrope] = amyOrder.everyNightAsterisk

charCode[charName.magician] = "magician"
charIcon[charName.magician] = SprMagician
charTitle[charName.magician] = "Фокусник"
charDesc[charName.magician] = "Демон думает, что вы - Приспешник. Приспешники думают, что вы - Демон."
charSet[charName.magician] = setName.experimental;
group[charName.magician] = charGroup.townsfolk;
f_night[charName.magician] = 4;
o_night[charName.magician] = 0;
amy_order[charName.magician] = amyOrder.passive

charCode[charName.marionette] = "marionette"
charIcon[charName.marionette] = SprMarionette
charTitle[charName.marionette] = "Марионетка"
charDesc[charName.marionette] = "Вы думаете, что вы - Добрый персонаж, но это не так. Демон знает, кто вы. [Демон - ваш сосед]"
charSet[charName.marionette] = setName.experimental;
group[charName.marionette] = charGroup.minion;
f_night[charName.marionette] = 11;
o_night[charName.marionette] = 0;
amy_order[charName.marionette] = amyOrder.passive

charCode[charName.mezepheles] = "mezepheles"
charIcon[charName.mezepheles] = SprMezepheles
charTitle[charName.mezepheles] = "Мезефель"
charDesc[charName.mezepheles] = "В начале вы узнаёте секретное слово. Первый Добрый игрок, который произнесёт это слово становится Злым ночью."
charSet[charName.mezepheles] = setName.experimental;
group[charName.mezepheles] = charGroup.minion;
f_night[charName.mezepheles] = 26;
o_night[charName.mezepheles] = 18;
amy_order[charName.mezepheles] = amyOrder.oncePerGame

charCode[charName.nightwatchman] = "nightwatchman"
charIcon[charName.nightwatchman] = SprNightwatchman
charTitle[charName.nightwatchman] = "Ночной сторож"
charDesc[charName.nightwatchman] = "Раз в игру, ночью, выберите игрока. Этот игрок узнаёт, кто вы."
charSet[charName.nightwatchman] = setName.experimental;
group[charName.nightwatchman] = charGroup.townsfolk;
f_night[charName.nightwatchman] = 48;
o_night[charName.nightwatchman] = 64;
amy_order[charName.nightwatchman] = amyOrder.oncePerGame

charCode[charName.noble] = "noble"
charIcon[charName.noble] = SprNoble
charTitle[charName.noble] = "Знать"
charDesc[charName.noble] = "В начале вы знаете 3 игроков. Один и только один из них - Злодей."
charSet[charName.noble] = setName.experimental;
group[charName.noble] = charGroup.townsfolk;
f_night[charName.noble] = 45;
o_night[charName.noble] = 0;
amy_order[charName.noble] = amyOrder.firstNight

charCode[charName.pixie] = "pixie"
charIcon[charName.pixie] = SprPixie
charTitle[charName.pixie] = "Пикси"
charDesc[charName.pixie] = 'В начале вы знаете 1 персонажа Горожанина, который есть в игре. Если вы "спятили", что вы - этот персонаж, то получите его способность, когда он умрёт.'
charSet[charName.pixie] = setName.experimental;
group[charName.pixie] = charGroup.townsfolk;
f_night[charName.pixie] = 28;
o_night[charName.pixie] = 3;
amy_order[charName.pixie] = amyOrder.firstNight

charCode[charName.politician] = "politician"
charIcon[charName.politician] = SprPolitician
charTitle[charName.politician] = "Политик"
charDesc[charName.politician] = "Если вы больше всех ответственны за то, что ваша команда проиграла, вы меняете сторону и побеждаете, даже если мертвы."
charSet[charName.politician] = setName.experimental;
group[charName.politician] = charGroup.outsider;
f_night[charName.politician] = 43;
o_night[charName.politician] = 0;
amy_order[charName.politician] = amyOrder.passive

charCode[charName.poppygrower] = "poppy_grower"
charIcon[charName.poppygrower] = SprPoppyGrower
charTitle[charName.poppygrower] = "Маковод"
charDesc[charName.poppygrower] = "Приспешники и Демоны друг друга не знают. Если вы умираете, в эту ночь они узнают друг друга."
charSet[charName.poppygrower] = setName.experimental;
group[charName.poppygrower] = charGroup.townsfolk;
f_night[charName.poppygrower] = 3;
o_night[charName.poppygrower] = 0;
amy_order[charName.poppygrower] = amyOrder.passive

charCode[charName.preacher] = "preacher"
charIcon[charName.preacher] = SprPreacher
charTitle[charName.preacher] = "Проповедник"
charDesc[charName.preacher] = "Каждую ночь выберите игрока: если выбран Приспешник, он об этом узнаёт. Все выбранные Приспешники теряют способности."
charSet[charName.preacher] = setName.experimental;
group[charName.preacher] = charGroup.townsfolk;
f_night[charName.preacher] = 13;
o_night[charName.preacher] = 5;
amy_order[charName.preacher] = amyOrder.everyNight

charCode[charName.psychopath] = "psychopath"
charIcon[charName.psychopath] = SprPsychopath
charTitle[charName.psychopath] = "Психопат"
charDesc[charName.psychopath] = "Каждый день, перед номинациями, публично выберите игрока. Этот игрок умирает. Если вы казнены, вы умираете только если проиграете в камень-ножницы-бумага."
charSet[charName.psychopath] = setName.experimental;
group[charName.psychopath] = charGroup.minion;
f_night[charName.psychopath] = 0;
o_night[charName.psychopath] = 0;
amy_order[charName.psychopath] = amyOrder.dayActions

charCode[charName.puzzlemaster] = "puzzlemaster"
charIcon[charName.puzzlemaster] = SprPuzzlemaster
charTitle[charName.puzzlemaster] = "Мастер головоломок"
charDesc[charName.puzzlemaster] = "1 игрок пьян, даже если вы мертвы. Если вы угадаете кто (один раз за игру), узнаете, кто Демон. Если вы угадали неправильно, получите ложную информацию."
charSet[charName.puzzlemaster] = setName.experimental;
group[charName.puzzlemaster] = charGroup.outsider;
f_night[charName.puzzlemaster] = 0;
o_night[charName.puzzlemaster] = 0;
amy_order[charName.puzzlemaster] = amyOrder.oncePerGame

charCode[charName.riot] = "riot"
charIcon[charName.riot] = SprRiot
charTitle[charName.riot] = "Бунт"
charDesc[charName.riot] = "Номинированные умирают, но могут сразу же номинировать снова (на 3 день, они обязаны). После 3 дня Зло побеждает. [Все Приспещники - Бунт]"
charSet[charName.riot] = setName.experimental;
group[charName.riot] = charGroup.demon;
f_night[charName.riot] = 0;
o_night[charName.riot] = 0;
amy_order[charName.riot] = amyOrder.passive

charCode[charName.snitch] = "snitch"
charIcon[charName.snitch] = SprSnitch
charTitle[charName.snitch] = "Стукач"
charDesc[charName.snitch] = "Приспешники в начале знают 3 персонажей, которых нет в игре."
charSet[charName.snitch] = setName.experimental;
group[charName.snitch] = charGroup.outsider;
f_night[charName.snitch] = 6;
o_night[charName.snitch] = 0;
amy_order[charName.snitch] = amyOrder.firstNight

charCode[charName.widow] = "widow"
charIcon[charName.widow] = SprWidow
charTitle[charName.widow] = "Вдова"
charDesc[charName.widow] = "В первую ночь посмотрите Гримуар и выберите игрока: этот игрок отравлен. 1 Добрый игрок знает, что в игре есть Вдова."
charSet[charName.widow] = setName.experimental;
group[charName.widow] = charGroup.minion;
f_night[charName.widow] = 17;
o_night[charName.widow] = 0;
amy_order[charName.widow] = amyOrder.firstNight

charCode[charName.organgrinder] = "organ_grinder"
charIcon[charName.organgrinder] = SprOrganGrinder
charTitle[charName.organgrinder] = "Шарманщик"
charDesc[charName.organgrinder] = "Все игроки голосуют с закрытыми глазами. Подсчёт голосов скрыт. Голоса за вас засчитываются, только если вы сами проголосуете."
charSet[charName.organgrinder] = setName.experimental;
group[charName.organgrinder] = charGroup.minion;
f_night[charName.organgrinder] = 0;
o_night[charName.organgrinder] = 0;
amy_order[charName.organgrinder] = amyOrder.passive

charCode[charName.vizier] = "vizier"
charIcon[charName.vizier] = SprVizier
charTitle[charName.vizier] = "Визирь"
charDesc[charName.vizier] = "Все игроки знают кто вы. Вы не можете умереть днём. Если добрый игрок проголосовал, вы можете заставить сразу же казнить номинированного."
charSet[charName.vizier] = setName.experimental;
group[charName.vizier] = charGroup.minion;
f_night[charName.vizier] = 55;
o_night[charName.vizier] = 0;
amy_order[charName.vizier] = amyOrder.passive

charCode[charName.knight] = "knight"
charIcon[charName.knight] = SprKnight
charTitle[charName.knight] = "Рыцарь"
charDesc[charName.knight] = "В начале вы знаете 2 игроков, которые не являются Демоном."
charSet[charName.knight] = setName.experimental;
group[charName.knight] = charGroup.townsfolk;
f_night[charName.knight] = 44;
o_night[charName.knight] = 0;
amy_order[charName.knight] = amyOrder.firstNight

charCode[charName.steward] = "steward"
charIcon[charName.steward] = SprSteward
charTitle[charName.steward] = "Стюард"
charDesc[charName.steward] = "В начале вы знаете 1 Доброго игрока."
charSet[charName.steward] = setName.experimental;
group[charName.steward] = charGroup.townsfolk;
f_night[charName.steward] = 43;
o_night[charName.steward] = 0;
amy_order[charName.steward] = amyOrder.firstNight

charCode[charName.highPriestess] = "high_priestess"
charIcon[charName.highPriestess] = SprHighPriestess
charTitle[charName.highPriestess] = "Верховная жрица"
charDesc[charName.highPriestess] = "Каждую ночь вы узнаёте с каким игроком, по мнению Рассказчика, вам стоит поговорить больше всего."
charSet[charName.highPriestess] = setName.experimental;
group[charName.highPriestess] = charGroup.townsfolk;
f_night[charName.highPriestess] = 51;
o_night[charName.highPriestess] = 68;
amy_order[charName.highPriestess] = amyOrder.everyNight
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fabled

fabledCode[fabledName.angel] = "angel"
fabledIcon[fabledName.angel] = SprAngel
fabledTitle[fabledName.angel] = "Ангел"
fabledDesc[fabledName.angel] = "Что-то плохое может случится с тем, кто больше всего ответственен за смерть нового игрока."

fabledCode[fabledName.buddhist] = "buddhist"
fabledIcon[fabledName.buddhist] = SprBuddhist
fabledTitle[fabledName.buddhist] = "Буддист"
fabledDesc[fabledName.buddhist] = "Первые 2 минуты каждого дня игроки-ветераны не могут разговаривать."

fabledCode[fabledName.djinn] = "djinn"
fabledIcon[fabledName.djinn] = SprDjinn
fabledTitle[fabledName.djinn] = "Джинн"
fabledDesc[fabledName.djinn] = "Используйте специальное правило Джинна. Все игроки знают это правило."

fabledCode[fabledName.doomsayer] = "doomsayer"
fabledIcon[fabledName.doomsayer] = SprDoomsayer
fabledTitle[fabledName.doomsayer] = "Пророк конца света"
fabledDesc[fabledName.doomsayer] = "Если 4+ игроков живы, каждый живой игрок может публично выбрать (раз за игру), что игрок его стороны умирает."

fabledCode[fabledName.duchess] = "duchess"
fabledIcon[fabledName.duchess] = SprDuchess
fabledTitle[fabledName.duchess] = "Герцогиня"
fabledDesc[fabledName.duchess] = "Каждый день 3 игрока могут выбрать посетить вас. Каждую ночь* каждый посетитель узнаёт, сколько из них было Злодеями, но один из них получает ложную информацию."

fabledCode[fabledName.fibbin] = "fibbin"
fabledIcon[fabledName.fibbin] = SprFibbin
fabledTitle[fabledName.fibbin] = "Трепач"
fabledDesc[fabledName.fibbin] = "Один раз за игру, 1 Добрый игрок может получить неверную информацию."

fabledCode[fabledName.fiddler] = "fiddler"
fabledIcon[fabledName.fiddler] = SprFiddler
fabledTitle[fabledName.fiddler] = "Скрипач"
fabledDesc[fabledName.fiddler] = "Раз за игру Демон в закрытую выбирает игрока противоположной стороны: все игроки выбирают, кто из них двоих побеждает."

fabledCode[fabledName.hellslibrarian] = "hells_librarian"
fabledIcon[fabledName.hellslibrarian] = SprHellsLibrarian
fabledTitle[fabledName.hellslibrarian] = "Библиотекарь Ада"
fabledDesc[fabledName.hellslibrarian] = "Что-то плохое может случиться с тем, кто разговаривает, когда Рассказчик попросил тишины."

fabledCode[fabledName.revolutionary] = "revolutionary"
fabledIcon[fabledName.revolutionary] = SprRevolutionary
fabledTitle[fabledName.revolutionary] = "Революционер"
fabledDesc[fabledName.revolutionary] = "Все в игре знают, что 2 соседствующих игрока на одной стороне. Раз в игру один из них считается неправильно для другой способности."

fabledCode[fabledName.sentinel] = "sentinel"
fabledIcon[fabledName.sentinel] = SprSentinel
fabledTitle[fabledName.sentinel] = "Часовой"
fabledDesc[fabledName.sentinel] = "В игре может быть на 1 больше или на 1 меньше Постороннего."

fabledCode[fabledName.spiritofivory] = "spirit_of_ivory"
fabledIcon[fabledName.spiritofivory] = SprSpiritOfIvory
fabledTitle[fabledName.spiritofivory] = "Костянной дух"
fabledDesc[fabledName.spiritofivory] = "В игре не может быть больше 1 лишнего Злодея."

fabledCode[fabledName.sentinel] = "sentinel"
fabledIcon[fabledName.sentinel] = SprSentinel
fabledTitle[fabledName.sentinel] = "Часовой"
fabledDesc[fabledName.sentinel] = "В игре может быть на 1 больше или на 1 меньше Постороннего."

fabledCode[fabledName.stormcatcher] = "storm_catcher"
fabledIcon[fabledName.stormcatcher] = SprStormCatcher
fabledTitle[fabledName.stormcatcher] = "Ловец молний"
fabledDesc[fabledName.stormcatcher] = "Назовите Доброго персонажа. Если этот персонаж в игре, он может умереть только через казнь. Злодеи знают, какой это игрок."

fabledCode[fabledName.toymaker] = "toymaker"
fabledIcon[fabledName.toymaker] = SprToymaker
fabledTitle[fabledName.toymaker] = "Создатель игрушек"
fabledDesc[fabledName.toymaker] = "Демон может выбрать не атаковать и обязан так сделать хотя бы раз за игру. Злодеи получают нормальную начальную информацию."

fabledCode[fabledName.gardener] = "gardener"
fabledIcon[fabledName.gardener] = SprGardener
fabledTitle[fabledName.gardener] = "Садовник"
fabledDesc[fabledName.gardener] = "Рассказчик назначает персонажей одному или более игрокам."

fabledCode[fabledName.bootlegger] = "bootlegger"
fabledIcon[fabledName.bootlegger] = SprBootlegger
fabledTitle[fabledName.bootlegger] = "Контрабандист"
fabledDesc[fabledName.bootlegger] = "В сценарии присутствуют неофициальные персонажи или правила."
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Travellers

travellerCode[travellerName.apprentice] = "apprentice"
travellerIcon[travellerName.apprentice] = SprApprentice
travellerTitle[travellerName.apprentice] = "Подмастерье"
travellerDesc[travellerName.apprentice] = "В вашу первую ночь вы получаете способность Горожанина (если Добрый) или способность Приспешника (если Злодей)."

travellerCode[travellerName.barista] = "barista"
travellerIcon[travellerName.barista] = SprBarista
travellerTitle[travellerName.barista] = "Бариста"
travellerDesc[travellerName.barista] = "Каждую ночь до заката: 1) игрок становится трезв, здоров и получает верную информацию или 2) их способность срабатывает дважды. Этот игрок узнаёт что именно произошло."

travellerCode[travellerName.beggar] = "beggar"
travellerIcon[travellerName.beggar] = SprBeggar
travellerTitle[travellerName.beggar] = "Попрошайка"
travellerDesc[travellerName.beggar] = "Вы обязаны использовать жетон голоса, чтобы голосовать. Если мёртвый игрок отдаст вам свой жетон, вы узнаёте его сторону. Вы трезвы и здоровы."

travellerCode[travellerName.bishop] = "bishop"
travellerIcon[travellerName.bishop] = SprBishop
travellerTitle[travellerName.bishop] = "Епископ"
travellerDesc[travellerName.bishop] = "Только рассказчик может номинировать. Каждый день должен быть номинирован хотя бы 1 игрок противоположной команды."

travellerCode[travellerName.bonecollector] = "bone_collector"
travellerIcon[travellerName.bonecollector] = SprBoneCollector
travellerTitle[travellerName.bonecollector] = "Собиратель костей"
travellerDesc[travellerName.bonecollector] = "Раз за игру ночью* выберите мёртвого игрока: этот игрок возвращает свою способность до заката."

travellerCode[travellerName.bureaucrat] = "bureaucrat"
travellerIcon[travellerName.bureaucrat] = SprBureaucrat
travellerTitle[travellerName.bureaucrat] = "Бюрократ"
travellerDesc[travellerName.bureaucrat] = "Каждую ночь вы выбираете игрока (не себя), днём его голос будет считаться за 3 голоса."

travellerCode[travellerName.bonecollector] = "bone_collector"
travellerIcon[travellerName.bonecollector] = SprBoneCollector
travellerTitle[travellerName.bonecollector] = "Собиратель костей"
travellerDesc[travellerName.bonecollector] = "Раз за игру ночью* выберите мёртвого игрока: этот игрок возвращает свою способность до заката."

travellerCode[travellerName.butcher] = "butcher"
travellerIcon[travellerName.butcher] = SprButcher
travellerTitle[travellerName.butcher] = "Мясник"
travellerDesc[travellerName.butcher] = "Каждый день после первой казни, вы можете номинировать снова."

travellerCode[travellerName.deviant] = "deviant"
travellerIcon[travellerName.deviant] = SprDeviant
travellerTitle[travellerName.deviant] = "Девиант"
travellerDesc[travellerName.deviant] = "Если днём вы были смешными, вы не умираете от изгнания."

travellerCode[travellerName.gangster] = "gangster"
travellerIcon[travellerName.gangster] = SprGangster
travellerTitle[travellerName.gangster] = "Гангстер"
travellerDesc[travellerName.gangster] = "Раз в день можете убить своего живого соседа, если другой живой сосед согласен."

travellerCode[travellerName.gunslinger] = "gunslinger"
travellerIcon[travellerName.gunslinger] = SprGunslinger
travellerTitle[travellerName.gunslinger] = "Стрелок"
travellerDesc[travellerName.gunslinger] = "Каждый день, после того как засчитается первый голос, можете выбрать игрока, который голосовал, он умирает."

travellerCode[travellerName.harlot] = "harlot"
travellerIcon[travellerName.harlot] = SprHarlot
travellerTitle[travellerName.harlot] = "Блудница"
travellerDesc[travellerName.harlot] = "Каждую ночь* выбираете живого игрока: если он согласен, узнайте его сторону, но вы оба можете умереть."

travellerCode[travellerName.judge] = "judge"
travellerIcon[travellerName.judge] = SprJudge
travellerTitle[travellerName.judge] = "Судья"
travellerDesc[travellerName.judge] = "Раз за игру, если номинировал другой игрок, можете сделать текущую номинацию на казнь успешной и окончательной или отменить её."

travellerCode[travellerName.matron] = "matron"
travellerIcon[travellerName.matron] = SprMatron
travellerTitle[travellerName.matron] = "Надзирательница"
travellerDesc[travellerName.matron] = "Каждый день можете выбрать до 3 наборов из 2 игроков: они меняются местами в кругу игроков. Игроки не могут вставать, чтобы приватно общаться."

travellerCode[travellerName.scapegoat] = "scapegoat"
travellerIcon[travellerName.scapegoat] = SprScapegoat
travellerTitle[travellerName.scapegoat] = "Козёл отпущения"
travellerDesc[travellerName.scapegoat] = "Если игрок на вашей стороне казнён, вас могут казнить вместо него."

travellerCode[travellerName.thief] = "thief"
travellerIcon[travellerName.thief] = SprThief
travellerTitle[travellerName.thief] = "Вор"
travellerDesc[travellerName.thief] = "Каждую ночь выбираете игрока (не себя): днём его голос засчитывается в минус."

travellerCode[travellerName.voudon] = "voudon"
travellerIcon[travellerName.voudon] = SprVoudon
travellerTitle[travellerName.voudon] = "Вудон"
travellerDesc[travellerName.voudon] = "Только вы и мёртвые можете голосовать. Мёртвым не нужны жетоны голосов для этого. Правило о половине голосов для казни не работает."

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// First night Other night

first_night_order_array = scr_make_array(
    -999,
    -travellerName.barista,
    -travellerName.apprentice,
    -travellerName.thief,
    -travellerName.bureaucrat,
    charName.philosopher,
    charName.alchemist,
    charName.poppygrower,
    charName.magician,
    -999,
    charName.snitch,
    charName.lunatic,
    -999,
    charName.king,
    charName.sailor,
    charName.marionette,
    charName.engineer,
    charName.preacher,
    charName.lilmonsta,
    charName.lleech,
    charName.poisoner,
    charName.widow,
    charName.courtier,
    charName.snakecharmer,
    charName.godfather,
    charName.devilsadvocate,
    charName.eviltwin,
    charName.witch,
    charName.cerenovus,
    charName.fearmonger,
    charName.mezepheles,
    charName.pukka,
    charName.pixie,
    charName.huntsman,
    charName.damsel,
    charName.amnesiac,
    charName.washerwoman,
    charName.librarian,
    charName.investigator,
    charName.chef,
    charName.empath,
    charName.fortuneteller,
    charName.butler,
    charName.grandmother,
    charName.clockmaker,
    charName.dreamer,
    charName.seamstress,
    charName.steward,
    charName.knight,
    charName.noble,
    charName.balloonist,
    charName.bountyhunter,
    charName.nightwatchman,
    charName.cultleader,
    charName.spy,
    charName.highPriestess,
    charName.general,
    charName.chambermaid,
    charName.mathematician,
    -999,
    charName.vizier,
    charName.leviathan
)
first_night_order_array_length = array_length_1d(first_night_order_array)

other_night_order_array = scr_make_array(
    -999,
    -travellerName.bureaucrat,
    -travellerName.thief,
    -travellerName.barista,
    -travellerName.harlot,
    -travellerName.bonecollector,
    charName.philosopher,
    charName.poppygrower,
    charName.sailor,
    charName.pixie,
    charName.engineer,
    charName.preacher,
    charName.poisoner,
    charName.courtier,
    charName.innkeeper,
    charName.gambler,
    charName.snakecharmer,
    charName.monk,
    charName.devilsadvocate,
    charName.witch,
    charName.cerenovus,
    charName.pithag,
    charName.fearmonger,
    charName.mezepheles,
    charName.scarletwoman,
    charName.lunatic,
    charName.exorcist,
    charName.lycanthrope,
    charName.legion,
    charName.imp,
    charName.zombuul,
    charName.pukka,
    charName.shabaloth,
    charName.po,
    charName.fanggu,
    charName.nodashii,
    charName.vortox,
    charName.vigormortis,
    charName.alhadikhia,
    charName.lleech,
    charName.lilmonsta,
    charName.assassin,
    charName.godfather,
    charName.gossip,
    charName.acrobat,
    charName.barber,
    charName.sweetheart,
    charName.sage,
    charName.professor,
    charName.choirboy,
    charName.huntsman,
    charName.damsel,
    charName.amnesiac,
    charName.farmer,
    charName.tinker,
    charName.moonchild,
    charName.grandmother,
    charName.ravenkeeper,
    charName.empath,
    charName.fortuneteller,
    charName.undertaker,
    charName.dreamer,
    charName.flowergirl,
    charName.towncrier,
    charName.oracle,
    charName.seamstress,
    charName.juggler,
    charName.balloonist,
    charName.king,
    charName.bountyhunter,
    charName.nightwatchman,
    charName.cultleader,
    charName.butler,
    charName.spy,
    charName.highPriestess,
    charName.general,
    charName.chambermaid,
    charName.mathematician,
    -999,
    charName.leviathan
)
other_night_order_array_length = array_length_1d(other_night_order_array)

f_night_demon_info = 12;
f_night_minion_info = 9;
f_night_dawn_order = 59;
o_night_dawn_order = 78;

for(i=0; i&lt;charName.lastChar; i++) {
    for(j=1;j&lt;first_night_order_array_length;j++) {
        f_night[i] = 0;
        if (first_night_order_array[j] = i) {
            f_night[i] = j;
            break;
        }
    }
    for(j=1;j&lt;other_night_order_array_length;j++) {
        o_night[i] = 0;
        if (other_night_order_array[j] = i) {
            o_night[i] = j;
            break;
        }
    }
}

for(i=1; i&lt;travellerName.lastChar; i++) {
    for(j=1;j&lt;first_night_order_array_length;j++) {
        traveller_f_night[i] = 0;
        if (first_night_order_array[j] = -i) {
            traveller_f_night[i] = j;
            break;
        }
    }
    for(j=1;j&lt;other_night_order_array_length;j++) {
        traveller_o_night[i] = 0;
        if (other_night_order_array[j] = -i) {
            traveller_o_night[i] = j;
            break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Tags

tag_filter_amount = 44;
tag_filter_mode = 0; // 0 - sum, join
for(i=0;i&lt;tag_filter_amount;i++) {
    tag_filter_enable[i] = 0;
    tag_filter_disable[i] = 0;
}

tag_filter_desc[0] = "Меняют кол-во посторонних на сетапе игры";
tag_filter_name[0] = "Счёт Посторонних";
tag_filter_arr[0] = scr_make_array(charName.huntsman,charName.balloonist,charName.vigormortis,charName.fanggu,charName.godfather,charName.baron);

tag_filter_desc[1] = "Всё, что меняет голосование, силу голоса, триггерится за счёт голосов";
tag_filter_name[1] = "Голосование";
tag_filter_arr[1] = scr_make_array(charName.organgrinder,charName.legion,charName.cultleader,charName.flowergirl,charName.butler);

tag_filter_desc[2] = "Персонажи зависящие от расположения игроков в кругу";
tag_filter_name[2] = "Позиционирование";
tag_filter_arr[2] = scr_make_array(charName.marionette,charName.acrobat,charName.nodashii,charName.clockmaker,charName.tealady,charName.chef,charName.empath);

tag_filter_desc[42] = "Персонажи, получающие информацию в первую ночь, или дающие другим информацию в первую ночь";
tag_filter_name[42] = "Инфо в первую ночь";
tag_filter_arr[42] = scr_make_array(charName.steward,charName.knight,charName.snitch,charName.pixie,charName.noble,charName.bountyhunter,charName.clockmaker,charName.grandmother,charName.godfather,charName.chef, charName.investigator, charName.librarian, charName.washerwoman);

tag_filter_desc[3] = "Всё, что может помочь вычислить злодеев";
tag_filter_name[3] = "Скан Злодеев";
tag_filter_arr[3] = scr_make_array(charName.poppygrower,charName.noble,charName.magician,charName.lycanthrope,charName.king,charName.bountyhunter,charName.seamstress,charName.oracle,charName.klutz,charName.juggler,charName.dreamer,charName.clockmaker,charName.tealady,charName.moonchild,charName.chef,charName.empath);

tag_filter_desc[4] = "Всё, что может помочь определить кто приспешник, какие приспешники в игре и т. д.";
tag_filter_name[4] = "Скан Приспешников";
tag_filter_arr[4] = scr_make_array(charName.preacher,charName.engineer,charName.balloonist,charName.alchemist,charName.towncrier,charName.juggler,charName.minstrel,charName.investigator);

tag_filter_desc[5] = "Всё, что может помочь определить кто демон, какой демон в игре и т. д.";
tag_filter_name[5] = "Скан Демона";
tag_filter_arr[5] = scr_make_array(charName.knight,charName.puzzlemaster,charName.golem,charName.engineer,charName.choirboy,charName.balloonist,charName.snakecharmer,charName.sage,charName.juggler,charName.flowergirl,charName.exorcist,charName.fortuneteller,charName.slayer);

tag_filter_desc[6] = "Использует механику опьянения (опьянение чаще связано с Добрыми персонажами)";
tag_filter_name[6] = "Пьянство";
tag_filter_arr[6] = scr_make_array(charName.puzzlemaster,charName.acrobat,charName.sweetheart,charName.snakecharmer,charName.philosopher,charName.mathematician,charName.sailor,charName.minstrel,charName.innkeeper,charName.goon,charName.drunk,charName.courtier);

tag_filter_desc[7] = "Персонажи, которые думают, что они другие персонажи, заставляют других думать что-то или механики около этого";
tag_filter_name[7] = "Думает что";
tag_filter_arr[7] = scr_make_array(charName.marionette,charName.cannibal,charName.amnesiac,charName.zombuul,charName.lunatic,charName.drunk);

tag_filter_desc[8] = "Персонажи, просыпающиеся каждую ночь";
tag_filter_name[8] = "Каждую ночь";
tag_filter_arr[8] = scr_make_array(charName.highPriestess,charName.preacher,charName.nightwatchman,charName.cultleader,charName.lleech,charName.lilmonsta,charName.king,charName.huntsman,charName.general,charName.fearmonger,charName.engineer,charName.bountyhunter,charName.balloonist,charName.witch,charName.snakecharmer,charName.seamstress,charName.philosopher,charName.mathematician,charName.dreamer,charName.cerenovus,charName.sailor,charName.pukka,charName.devilsadvocate,charName.chambermaid,charName.empath, charName.fortuneteller, charName.poisoner, charName.spy);

tag_filter_desc[9] = "Персонажи, просыпающиеся каждую ночь, кроме первой";
tag_filter_name[9] = "Каждую ночь*";
tag_filter_arr[9] = scr_make_array(charName.lycanthrope,charName.lilmonsta,charName.legion,charName.alhadikhia,charName.acrobat,charName.vortox,charName.vigormortis,charName.towncrier,charName.pithag,charName.oracle,charName.nodashii,charName.flowergirl,charName.fanggu,charName.zombuul,charName.shabaloth,charName.professor,charName.po,charName.innkeeper,charName.gambler, charName.exorcist,charName.assassin,charName.imp, charName.monk, charName.undertaker);

tag_filter_desc[10] = "Персонажи, которые могут выбирать своих жертв";
tag_filter_name[10] = "Убивает сам";
tag_filter_arr[10] = scr_make_array(charName.psychopath, charName.lycanthrope,charName.lleech,charName.golem,charName.alhadikhia,charName.witch,charName.vortox,charName.vigormortis,charName.nodashii,charName.fanggu,charName.zombuul,charName.shabaloth,charName.pukka,charName.po,charName.godfather, charName.assassin,charName.imp, charName.slayer, charName.moonchild);

tag_filter_desc[11] = "Из-за этих персонажей демон может поменяться или игрок может стать демоном";
tag_filter_name[11] = "Смена демона";
tag_filter_arr[11] = scr_make_array(charName.legion,charName.engineer,charName.snakecharmer,charName.pithag,charName.fanggu,charName.imp,charName.scarletwoman);

tag_filter_desc[12] = "Добавляют причину, по которой ночью мог умереть злодей (помимо блефа)";
tag_filter_name[12] = "Ночью умер злодей";
tag_filter_arr[12] = scr_make_array(charName.magician,charName.legion,charName.bountyhunter,charName.alhadikhia,charName.vigormortis,charName.snakecharmer,charName.pithag,charName.fanggu,charName.zombuul,charName.shabaloth,charName.lunatic,charName.goon,charName.imp,charName.scarletwoman);

tag_filter_desc[13] = "Используют посторонних для своих способностей, находят их, связаны с ними (необязательно посторонние)";
tag_filter_name[13] = "Что-то с Посторонними";
tag_filter_arr[13] = scr_make_array(charName.huntsman,charName.balloonist,charName.mutant,charName.fanggu,charName.godfather, charName.librarian);

tag_filter_desc[14] = "Персонажи, которые срабатывают на казнях, из-за казней или их отсутствия, пассивно влияют на казни";
tag_filter_name[14] = "Казни";
tag_filter_arr[14] = scr_make_array(charName.vizier,charName.riot,charName.psychopath, charName.leviathan,charName.legion,charName.goblin,charName.fearmonger,charName.cannibal,charName.boomdandy,charName.atheist,charName.vortox,charName.cerenovus,charName.mutant,charName.eviltwin,charName.pacifist, charName.minstrel,charName.mastermind,charName.godfather, charName.devilsadvocate, charName.mayor, charName.saint, charName.undertaker);

tag_filter_desc[15] = "Персонажи, защищающие себя/других игроков от смерти ночью";
tag_filter_name[15] = "Защита ночью";
tag_filter_arr[15] = scr_make_array(charName.lycanthrope,charName.lleech,charName.tealady,charName.sailor, charName.innkeeper,charName.goon,charName.fool, charName.mayor, charName.monk, charName.soldier);

tag_filter_desc[16] = "Персонажи, которые могут срабатывать или не срабатывать, а также требующие объективной оценки игры / идей от рассказчика";
tag_filter_name[16] = "Решение рассказчика";
tag_filter_arr[16] = scr_make_array(charName.highPriestess,charName.general,charName.fisherman,charName.atheist,charName.tinker,charName.pacifist, charName.mayor, charName.recluse, charName.spy);

tag_filter_desc[17] = "Используют механику отравления (отравление чаще связано со Злодеями)";
tag_filter_name[17] = "Отравление";
tag_filter_arr[17] = scr_make_array(charName.widow,charName.lleech,charName.cannibal,charName.acrobat,charName.vigormortis,charName.nodashii,charName.mathematician,charName.pukka,charName.poisoner);

tag_filter_desc[18] = "Срабатывают из-за своей смерти или смерти других игроков";
tag_filter_name[18] = "Триггер на смерть";
tag_filter_arr[18] = scr_make_array(charName.pixie,charName.lleech,charName.leviathan,charName.king,charName.fearmonger,charName.farmer,charName.choirboy,charName.cannibal,charName.bountyhunter,charName.boomdandy,charName.vigormortis,charName.sweetheart,charName.sage,charName.klutz,charName.barber,charName.zombuul,charName.moonchild,charName.undertaker,charName.godfather,charName.minstrel,charName.grandmother,charName.ravenkeeper);

tag_filter_desc[19] = "Эти персонажи делают так, что они или кто-то ещё узнают точного персонажа какого-то игрока (или одного из игроков)";
tag_filter_name[19] = "Узнаёт персонажа";
tag_filter_arr[19] = scr_make_array(charName.nightwatchman,charName.king,charName.eviltwin,charName.grandmother,charName.gambler, charName.exorcist, charName.ravenkeeper, charName.undertaker, charName.washerwoman, charName.librarian, charName.investigator);

tag_filter_desc[20] = "Из-за этих способностей другие способности и правила могут посчитать игрока неправильно (не та сторона, не та группа персонажей, не то состояние)";
tag_filter_name[20] = "Регистрируется не так";
tag_filter_arr[20] = scr_make_array(charName.poppygrower,charName.magician,charName.legion,charName.atheist,charName.zombuul, charName.recluse, charName.spy);

tag_filter_desc[21] = "Способности добавляющие моментальное окончание игры победой или поражением одной из команд";
tag_filter_name[21] = "Поражение/победа";
tag_filter_arr[21] = scr_make_array(charName.riot,charName.politician,charName.leviathan,charName.heretic,charName.goblin,charName.fearmonger,charName.damsel,charName.cultleader,charName.atheist,charName.vortox,charName.klutz,charName.eviltwin,charName.mastermind,charName.mayor, charName.saint);

tag_filter_desc[22] = "Способности работающие сами по себе, не требующие решений игрока";
tag_filter_name[22] = "Пассивки";
tag_filter_arr[22] = scr_make_array(charName.poppygrower,charName.magician,charName.lleech,charName.leviathan,charName.legion,charName.heretic,charName.atheist,charName.vortox,charName.mutant,charName.nodashii,charName.eviltwin,charName.zombuul,charName.tinker,charName.tealady, charName.sailor, charName.pacifist,charName.minstrel,charName.mastermind,charName.grandmother,charName.goon,charName.godfather, charName.fool, charName.scarletwoman,charName.saint,charName.mayor,charName.recluse,charName.drunk, charName.soldier, charName.spy);

tag_filter_desc[23] = "Способности срабатывающие днём (но не касающиеся номинаций и казни)";
tag_filter_name[23] = "Работает днём";
tag_filter_arr[23] = scr_make_array(charName.psychopath, charName.fisherman,charName.amnesiac,charName.savant,charName.juggler,charName.artist, charName.slayer, charName.gossip);

tag_filter_desc[24] = "Способности которые срабатывают только раз за игру (не считая те, которые срабатывают от смерти персонажа)";
tag_filter_name[24] = "Раз в игру";
tag_filter_arr[24] = scr_make_array(charName.puzzlemaster,charName.mezepheles,charName.huntsman,charName.golem,charName.fisherman,charName.engineer,charName.damsel,charName.seamstress,charName.philosopher,charName.juggler,charName.fanggu, charName.artist, charName.fool,charName.zombuul,charName.professor,charName.courtier,charName.assassin,charName.slayer, charName.virgin);

tag_filter_desc[25] = "Персонажи, которые объявляются публично (или слишком очевидные), а также персонажи, которые должны в открытую использовать свои способности";
tag_filter_name[25] = "Публично";
tag_filter_arr[25] = scr_make_array(charName.psychopath, charName.goblin,charName.damsel,charName.klutz,charName.juggler,charName.moonchild,charName.slayer,charName.gossip);

tag_filter_desc[26] = "Персонажи, способные заглянуть в гримуар ведущего";
tag_filter_name[26] = "Видит гримуар";
tag_filter_arr[26] = scr_make_array(charName.spy,charName.widow);

tag_filter_desc[27] = "Всё, что меняет то, как работают номинации, триггерятся от номинаций, зависят от номинаций или упомянающие номинанта/номинируемого";
tag_filter_name[27] = "Номинации";
tag_filter_arr[27] = scr_make_array(charName.vizier,charName.riot,charName.psychopath, charName.golem,charName.goblin,charName.fearmonger,charName.witch,charName.towncrier,charName.virgin);

tag_filter_desc[28] = "Персонажи, убивающие кого-то, но не способные выбрать жертву";
tag_filter_name[28] = "Убивает косвенно";
tag_filter_arr[28] = scr_make_array(charName.lilmonsta,charName.legion,charName.boomdandy,charName.pithag,charName.virgin,charName.gossip);

tag_filter_desc[29] = "Способности, определяющие персонажей Добрых игроков, помогающие найти Добрых игроков или доказать, что вы Добрый";
tag_filter_name[29] = "Скан Добрых";
tag_filter_arr[29] = scr_make_array(charName.godfather,charName.steward,charName.pixie,charName.noble,charName.lycanthrope,charName.king,charName.farmer,charName.cannibal,charName.balloonist,charName.seamstress,charName.oracle,charName.juggler,charName.dreamer,charName.tealady,charName.professor,charName.pacifist,charName.moonchild,charName.grandmother,charName.virgin,charName.washerwoman,charName.librarian,charName.empath);

tag_filter_desc[30] = "Все способности, из-за которых ночью будет больше одной смерти";
tag_filter_name[30] = "Дополнительные смерти";
tag_filter_arr[30] = scr_make_array(charName.alhadikhia,charName.acrobat,charName.tinker,charName.shabaloth,charName.po,charName.moonchild,charName.grandmother,charName.gossip,charName.godfather, charName.gambler, charName.assassin);

tag_filter_desc[31] = "Персонажи, получающие информацию разного рода, не связанную напрямую с тем, кто Добрый, а кто Злодей (или информация неопределённая)";
tag_filter_name[31] = "Всякая информация";
tag_filter_arr[31] = scr_make_array(charName.highPriestess,charName.king,charName.general,charName.fisherman,charName.amnesiac,charName.acrobat,charName.vortox,charName.savant,charName.mathematician,charName.artist,charName.chambermaid,charName.gossip);

tag_filter_desc[32] = "Персонажи, которые могут не умереть днём (например, от казни)";
tag_filter_name[32] = "Не умирает днём";
tag_filter_arr[32] = scr_make_array(charName.vizier,charName.psychopath, charName.lleech,charName.tealady,charName.sailor,charName.pacifist,charName.devilsadvocate, charName.fool);

tag_filter_desc[33] = "Персонажи, способные заблокировать убийства демона (не защита, именно ход демона, отмена, опьянение/отравление)";
tag_filter_name[33] = "Блок демона";
tag_filter_arr[33] = scr_make_array(charName.lycanthrope,charName.po,charName.minstrel,charName.courtier,charName.exorcist,charName.poisoner);

tag_filter_desc[34] = "Способности, ведущие к смене команды посреди игры или на сетапе";
tag_filter_name[34] = "Смена сторон";
tag_filter_arr[34] = scr_make_array(charName.politician,charName.mezepheles,charName.legion,charName.cultleader,charName.bountyhunter,charName.snakecharmer,charName.fanggu,charName.goon);

tag_filter_desc[35] = "Способности, требующие нестандартного подхода (иногда) со стороны игроков или рассказчика";
tag_filter_name[35] = "Креатив";
tag_filter_arr[35] = scr_make_array(charName.highPriestess,charName.mezepheles,charName.fisherman,charName.engineer,charName.atheist,charName.amnesiac,charName.alchemist,charName.artist,charName.gossip,charName.artist,charName.juggler);

tag_filter_desc[36] = "Способности, дающие о себе знать кому-то за столом";
tag_filter_name[36] = "Знают что вы в игре";
tag_filter_arr[36] = scr_make_array(charName.vizier,charName.organgrinder,charName.widow,charName.preacher,charName.nightwatchman,charName.marionette,charName.leviathan,charName.king,charName.fearmonger,charName.damsel,charName.alhadikhia,charName.eviltwin,charName.lunatic,charName.exorcist);

tag_filter_desc[37] = "Способности, которые могут возвращать из мёртвых";
tag_filter_name[37] = "Возрождение";
tag_filter_arr[37] = scr_make_array(charName.alhadikhia,charName.shabaloth,charName.professor);

tag_filter_desc[38] = "Всё, что может привести к смене персонажей у игроков";
tag_filter_name[38] = "Смена персонажей";
tag_filter_arr[38] = scr_make_array(charName.riot,charName.legion,charName.huntsman,charName.farmer,charName.engineer,charName.snakecharmer,charName.pithag,charName.fanggu,charName.barber);

tag_filter_desc[39] = "Затрагивает механику сумасшествия (вы спятили, что вы...)";
tag_filter_name[39] = "Сумасшествие";
tag_filter_arr[39] = scr_make_array(charName.pixie,charName.cerenovus,charName.mutant);

tag_filter_desc[40] = "Способности, зависящие от мёртвых игроков, работающие даже после смерти, позволяющие выбирать только мёртвых";
tag_filter_name[40] = "Мёртвые";
tag_filter_arr[40] = scr_make_array(charName.king,charName.heretic,charName.cannibal,charName.atheist,charName.vigormortis,charName.oracle,charName.undertaker,charName.recluse,charName.spy,charName.professor,charName.zombuul,charName.politician);

tag_filter_desc[41] = "Персонажи, получающие способности, дающие способности и забирающие способности. Также всё, что модифицирует способности";
tag_filter_name[41] = "Способности";
tag_filter_arr[41] = scr_make_array(charName.preacher,charName.pixie,charName.cannibal,charName.amnesiac,charName.alchemist,charName.vortox,charName.vigormortis,charName.philosopher);

tag_filter_desc[43] = "Персонажи, которые могут повлиять на сетап игры (включая счёт посторонних)";
tag_filter_name[43] = "Меняет сетап";
tag_filter_arr[43] = scr_make_array(charName.huntsman,charName.balloonist,charName.vigormortis,charName.fanggu,charName.godfather,charName.baron,charName.marionette,charName.legion,charName.riot,charName.choirboy,charName.atheist,charName.bountyhunter,charName.lilmonsta);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Jynx

scr_jynx(charName.fanggu,charName.scarletwoman,"Если Фэнг Гу умирает, выбрав Постороннего, Алая Дама не становится Фэнг Гу")
scr_jynx(charName.chambermaid,charName.mathematician,"Служанка узнаёт, проснулся ли Математик, хотя ходит раньше него")
scr_jynx(charName.lunatic,charName.mathematician,"К информации Математика добавляется 1, если Лунатик и Демон выбрали разных игроков")
scr_jynx(charName.godfather,charName.heretic,"Эти персонажи не могут быть в одной игре")
scr_jynx(charName.widow,charName.heretic,"Эти персонажи не могут быть в одной игре")
scr_jynx(charName.spy,charName.heretic,"Эти персонажи не могут быть в одной игре")
scr_jynx(charName.spy,charName.damsel,"Эти персонажи не могут быть в одной игре")
scr_jynx(charName.widow,charName.damsel,"Эти персонажи не могут быть в одной игре")
scr_jynx(charName.legion,charName.preacher,"Эти персонажи не могут быть в одной игре")
scr_jynx(charName.lilmonsta,charName.magician,"Эти персонажи не могут быть в одной игре")
scr_jynx(charName.riot,charName.exorcist,"Эти персонажи не могут быть в одной игре")
scr_jynx(charName.riot,charName.flowergirl,"Эти персонажи не могут быть в одной игре")
scr_jynx(charName.riot,charName.minstrel,"Эти персонажи не могут быть в одной игре")
scr_jynx(charName.alhadikhia,charName.mastermind,"Только 1 из персонажей может быть в игре, Злодеи в начале знают какой и у какого игрока")
scr_jynx(charName.pithag,charName.damsel,"Если Колдунья создаёт мадам, рассказчик выбирает игрока сам")
scr_jynx(charName.pithag,charName.heretic,"Колдунья не может создать Еретика")
scr_jynx(charName.pithag,charName.politician,"Колдунья не может создать Злого Политика")
scr_jynx(charName.pithag,charName.riot,"Если Колдунья создаёт Бунт, все Злодеи становятся Бунтом. Если это произошло после 3 дня, игра длится ещё 1 день")
scr_jynx(charName.engineer,charName.legion,"Эти персонажи не могут быть в начале игры одновременно")
scr_jynx(charName.widow,charName.alchemist,"Алхимик не может получить способность Вдовы")
scr_jynx(charName.spy,charName.alchemist,"Алхимик не может получить способность Шпиона")
scr_jynx(charName.spy,charName.magician,"Когда Шпион смотрит гримуар, в нём убираются персонажи Демона и Фокусника")
scr_jynx(charName.widow,charName.magician,"Когда Вдова смотрит гримуар, в нём убираются персонажи Демона и Фокусника")
scr_jynx(charName.spy,charName.poppygrower,"Пока Маковод жив, Шпион не смотрит гримуар")
scr_jynx(charName.widow,charName.poppygrower,"Пока Маковод жив, Вдова не смотрит гримуар")
scr_jynx(charName.lycanthrope,charName.gambler,"Если Ликантроп жив и Картёжник умирает от своей способности, никто из игроков в эту ночь больше не умрёт")
scr_jynx(charName.cannibal,charName.butler,"Если Каннибал получает способность Дворецкого, он об этом узнаёт")
scr_jynx(charName.marionette,charName.balloonist,"Если Марионетка думает, что он Аэронавт, +1 Посторонний")
scr_jynx(charName.marionette,charName.huntsman,"Если Марионетка думает, что он Охотник, +Мадам")
scr_jynx(charName.marionette,charName.poppygrower,"Когда умирает Маковод, Демон узнаёт Марионетку, но Марионетка не узнаёт никого")
scr_jynx(charName.marionette,charName.damsel,"Марионетка не узнаёт, что в игре есть Мадам")
scr_jynx(charName.marionette,charName.snitch,"Марионетка не узнаёт 3 персонажей, которых нет в игре, а Демон узаёт на 3 больше")
scr_jynx(charName.marionette,charName.lilmonsta,"Марионетка не просыпается из-за Монстра Джуниора, Марионетка сидит по соседству с Приспешником")
scr_jynx(charName.baron,charName.heretic,"Барон может добавить только 1 Постороннего")
scr_jynx(charName.cerenovus,charName.goblin,"Манипулятор может заставить игрока спятить, что он Гоблин")
scr_jynx(charName.alhadikhia,charName.scarletwoman,"Если в живых 2 Аль-Хадика, тот, что был Алой Дамой снова становится Алой Дамой")
scr_jynx(charName.lilmonsta,charName.scarletwoman,"Если в живых 5+ игроков, когда умирает тот, кто нянчит Монстра Джуниора, в эту ночь его будет нянчить Алая Дама")
scr_jynx(charName.mastermind,charName.lleech,"Если Руководитель жив, когда носитель Пиявки умирает через казнь, Пиявка выживает, но теряет свою способность")
scr_jynx(charName.lilmonsta,charName.poppygrower,"Если в игре Маковод, Приспешники просыпаются по очереди, пока один из них не согласится нянчить Монстра Джуниора")
scr_jynx(charName.leviathan,charName.soldier,"Если Левиафан номинирует Солдата и тот казнён, Солдат не умирает")
scr_jynx(charName.leviathan,charName.monk,"Если Левиафан номинирует цель Монаха и та казнена, она не умирает")
scr_jynx(charName.leviathan,charName.innkeeper,"Если Левиафан номинирует цель Трактирщика и та казнена, она не умирает")
scr_jynx(charName.leviathan,charName.ravenkeeper,"Если Левиафан в игре и Хранитель Ворона умирает через казнь, ночью он использует свою способность")
scr_jynx(charName.leviathan,charName.sage,"Если Левиафан в игре и Мудрец умирает через казнь, ночью он использует свою способность")
scr_jynx(charName.leviathan,charName.mayor,"Если Левиафан в игре и на 5-ый день не происходит казни, Добро побеждает")
scr_jynx(charName.leviathan,charName.farmer,"Если Левиафан в игре и Фермер умирает через казнь, Добрый игрок станет Фермером этой ночью")
scr_jynx(charName.lleech,charName.slayer,"Если Убийца демонов выбирает для способности носителя Пиявки, носитель умирает")
scr_jynx(charName.lleech,charName.heretic,"Если Пиявка отравляет Еретика, Еретик остаётся отравлен, а Пиявка умирает")

scr_jynx(charName.riot,charName.clockmaker,"Бунт считается Приспешником для Часовщика")
scr_jynx(charName.riot,charName.investigator,"Бунт считается Приспешником для Следователя")
scr_jynx(charName.riot,charName.preacher,"Бунт считается Приспешником для Проповедника")
scr_jynx(charName.riot,charName.towncrier,"Бунт считается Приспешником для Глашатая")
scr_jynx(charName.riot,charName.damsel,"Бунт считается Приспешником для Мадам")
scr_jynx(charName.riot,charName.cannibal,"Игроки умирающие от номинации, считаются казнёнными для Каннибала")
scr_jynx(charName.riot,charName.undertaker,"Игроки умирающие от номинации, считаются казнёнными для Гробовщика")
scr_jynx(charName.riot,charName.pacifist,"Игроки умирающие от номинации, считаются казнёнными для Пацифиста")
scr_jynx(charName.riot,charName.devilsadvocate,"Игроки умирающие от номинации, считаются казнёнными для Адвоката Дьявола")
scr_jynx(charName.riot,charName.grandmother,"Если Бунт номинирует и убивает внука Бабушки, Бабушка умирает")
scr_jynx(charName.riot,charName.king,"Если Бунт номинирует и убивает Короля и в игре живой Мальчик из Хора, его способность сработает ночью")
scr_jynx(charName.riot,charName.sage,"Если Бунт номинирует и убивает Мудреца, его способность срабатывает ночью")
scr_jynx(charName.riot,charName.ravenkeeper,"Если Бунт номинирует и убивает Хозяина Ворона, его способность срабатывает ночью")
scr_jynx(charName.riot,charName.farmer,"Если Бунт номинирует и убивает Фермера, его способность срабатывает ночью")
scr_jynx(charName.riot,charName.soldier,"Если Бунт номинирует Солдата, тот не умирает")
scr_jynx(charName.riot,charName.innkeeper,"Если Бунт номинирует цель Трактирщика, она не умирает")
scr_jynx(charName.riot,charName.monk,"Если Бунт номинирует цель Монаха, она не умирает")
scr_jynx(charName.riot,charName.mayor,"Если Мэр жив и 3-ий день начался только с 3 живыми игроками, если игроки никого не номинировали, Мэр и его команда побеждают")
scr_jynx(charName.riot,charName.saint,"Если Добрый игрок номинирует и убивает Святого, команда Святого проигрывает")
scr_jynx(charName.riot,charName.butler,"Дворецкий не может номинировать хозяина")
scr_jynx(charName.riot,charName.snitch,"Если Стукач в игре, каждый Бунт получает 3 дополнительных блефа")

scr_jynx(charName.organgrinder,charName.butler,"Если голосование с закрытыми глазами, Дворецкий может голосовать, но засчитается это, только если его хозяин тоже проголосует");
scr_jynx(charName.organgrinder,charName.flowergirl,"Если голосования проходили с закрытыми глазами, Цветочница узнаёт сколько раз Демон голосовал днём");
scr_jynx(charName.organgrinder,charName.minstrel,"Только 1 из персонажей может быть в игре, Злодеи в начале знают какой и у какого игрока");
scr_jynx(charName.organgrinder,charName.preacher,"Только 1 из персонажей может быть в игре, Злодеи в начале знают какой и у какого игрока");
scr_jynx(charName.organgrinder,charName.lilmonsta,"Голоса за Шарманщика засчитываются, если он нянчит Монстра Джуниора");

scr_jynx(charName.vizier,charName.investigator,"Если Следователь узнал, что в игре есть Визирь, рассказчик не объявит о существовании Визиря");
scr_jynx(charName.vizier,charName.preacher,"Потеряв способность, Визирь узнаёт об этом. Если Визиря казнить, когда у него есть способность, его команда побеждает");
scr_jynx(charName.vizier,charName.courtier,"Потеряв способность, Визирь узнаёт об этом. Если Визиря казнить, когда у него есть способность, его команда побеждает");
scr_jynx(charName.vizier,charName.alchemist,"Если у Алхимика способность Визиря, он может заставить казнить только если хотя бы 3 игрока проголосовали");
scr_jynx(charName.vizier,charName.magician,"Только 1 из персонажей может быть в игре, Злодеи в начале знают какой и у какого игрока");
scr_jynx(charName.vizier,charName.fearmonger,"Визирь просыпается со Страшилой и знает его выбор. Визирь не может казнить выбранного игрока");
scr_jynx(charName.vizier,charName.lilmonsta,"Визирь может умереть от казни, если он нянчит Монстра Джуниора");
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// late init

for(i=0; i&lt;=setName.experimental; i++)
    filter_set[i] = 1;
for(i=1; i&lt;travellerName.lastChar; i++)
    traveller_pick[i] = 0;
for(i=0; i&lt;fabledName.lastChar; i++)
    fabled_pick[i] = 0;
scr_refresh();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_save(application_surface,"FabledSheet.png");
draw_mode = 0;
button_lock = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_save(application_surface,"TravellerSheet.png");
draw_mode = 0;
button_lock = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>new_file_name = string(save_slot)+"-B.png";
if script_title != ""
    new_file_name = script_title+" - B.png";

surface_save(application_surface,new_file_name);
draw_mode = 0;
button_lock = 0;

new_file_name = string(save_slot)+".json";
if script_title != ""
    new_file_name = script_title+".json";
if file_exists(new_file_name)
    file_delete(new_file_name);
file = file_text_open_write(new_file_name);

formed_string = '['
for(i=0; i&lt;4; i++)
    for(j=0; j&lt;pick_group_amount[i]; j++) {
        if (formed_string != '[')
            formed_string+=','
        formed_string+='{"id":"'+string(charCode[pick_group_select[i,j]])+'"}';
    }
for(i=1; i&lt;travellerName.lastChar; i++) {
    if (traveller_pick[i]) {
        if (formed_string != '[')
            formed_string+=','
        formed_string+='{"id":"'+string(travellerCode[i])+'"}'
    }
}
for(i=0; i&lt;fabledName.lastChar; i++) {
    if (fabled_pick[i]) {
        if (formed_string != '[')
            formed_string+=','
        formed_string+='{"id":"'+string(fabledCode[i])+'"}'
    }
}
formed_string+=']'
file_text_write_string(file, formed_string);
file_text_close(file);

save_slot++;
ini_open("data.ini");
ini_write_real("data","save",save_slot);
ini_close();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>new_file_name = string(save_slot)+"-A.png";
if script_title != ""
    new_file_name = script_title+" - A.png";
surface_save(application_surface,new_file_name);
draw_mode = 2;
alarm[1] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>highlight_selection = -1;
highlight_list = -1;
if (!filter_box_open &amp;&amp; !help_box_open) {
    for(i=0; i&lt;=charGroup.demon; i++) {
        if (pick_group_amount[i]) {
            for(j=0; j&lt;pick_group_amount[i]; j++) {
                if mouse_area(ui_icon_x+(j%9)*150 - 70,ui_icon_y+(j div 9)*150+460*i - 70, ui_icon_x+(j%9)*150 + 70,ui_icon_y+(j div 9)*150+460*i + 70) {
                    highlight_selection = pick_group_select[i,j];
                }
            }
        }
    }
    
    if !button_lock &amp;&amp; mouse_check_button_pressed(mb_left) &amp;&amp; mouse_area(ui_x, ui_y + box_size*11.5 - 100, ui_x + 1200, ui_y + box_size*11.5 + 100)
        clipboard_set_text('%appdata%\BotCScripterRu');
    
    if !button_lock &amp;&amp; mouse_check_button_pressed(mb_left) &amp;&amp; mouse_area(ui_x + 650, ui_y + box_size*7 - 100, ui_x + 1200, ui_y + box_size*7 + 100) {
        tmp_title = get_string("Назовите свой сценарий",script_title);
        if (tmp_title != "")
            script_title = tmp_title
    }
    
    if !button_lock &amp;&amp; mouse_check_button_pressed(mb_left) &amp;&amp; mouse_area(ui_x + 650, ui_y + box_size*9 - 100, ui_x + 1200, ui_y + box_size*9 + 100) {
        filename = get_open_filename("json file|*.json", "");
        if (filename != "") {
            scr_remove_all();
            file = file_text_open_read(filename);
            finding_name = filename;
            while(true) {
                tmp_slash_pos = string_pos("\",finding_name);
                finding_name = string_copy(finding_name,tmp_slash_pos+1,string_length(finding_name));
                if string_pos("\",finding_name) = 0
                    break;
            }
            tmp_ext_pos = string_pos(".json",finding_name);
            script_title = string_copy(finding_name,1,tmp_ext_pos-1);
            json_file_string = file_text_read_string(file);
            for(i=0; i&lt;string_length(json_file_string); i++) {
                if string_char_at(json_file_string,i) = ":" {
                    tmp_json_char = string_char_at(json_file_string,i+2);
                    for(j=i+3; j&lt;string_length(json_file_string); j++) {
                        if string_char_at(json_file_string,j) = '"'
                            break;
                        tmp_json_char += string_char_at(json_file_string,j)
                    }
                    for(j=1; j&lt;travellerName.lastChar; j++)
                        if tmp_json_char = travellerCode[j] {
                            traveller_pick[j] = 1;
                            break;
                        }
                    for(j=0; j&lt;fabledName.lastChar; j++)
                        if tmp_json_char = fabledCode[j] {
                            fabled_pick[j] = 1;
                            break;
                        }
                    for(j=0; j&lt;charName.lastChar; j++)
                        if tmp_json_char = charCode[j] {
                            scr_pick_char(j);
                            break;
                        }
                }
            }
            file_text_close(file);
        }
    }
    
    if mouse_check_button_pressed(mb_left) &amp;&amp; mouse_area(ui_x + 20, ui_y + box_size*9 - 100, ui_x + 620, ui_y + box_size*9 + 100)
        if !button_lock {
            scr_remove_all();
        }
    
    if mouse_check_button_pressed(mb_left) &amp;&amp; mouse_area(ui_x + 20, ui_y + box_size*7 - 100, ui_x + 620, ui_y + box_size*7 + 100)
        if !button_lock {
            amy_sort();
            alarm[0] = 10;
            draw_mode = 1;
            button_lock = 1;
        }
    
    for(i=0; i&lt;=setName.experimental; i++)
        if !button_lock &amp;&amp; mouse_area(ui_x, ui_y + (box_size*1.5)*i, ui_x + 600, ui_y + box_size + (box_size*1.5)*i) {
            if mouse_check_button_pressed(mb_left) {
                filter_set[i] = !filter_set[i];
                scr_refresh();
                break;
            }
            if mouse_check_button_pressed(mb_right) &amp;&amp; i != setName.experimental{
                scr_remove_all();
                for(j=0; j&lt;charName.lastChar; j++) {
                    if charSet[j] = i
                        scr_pick_char(j);
                }
            }
        }
    
    for(i=0; i&lt;=2; i++)
        if !button_lock &amp;&amp; mouse_area(ui_x+700, ui_y + (box_size*1.5)*i, ui_x+700 + 600, ui_y + box_size + (box_size*1.5)*i) {
            if mouse_check_button_pressed(mb_left) {
                list_mode = i;
                scr_refresh();
                break;
            }
            if mouse_check_button_pressed(mb_right) {
                if (i = 1) {
                    alarm[2] = 10;
                    draw_mode = 3;
                    button_lock = 1;
                }
                if (i = 2) {
                    alarm[3] = 10;
                    draw_mode = 4;
                    button_lock = 1;
                }
            }
        }
    
    if mouse_area(ui_x+700, ui_y + (box_size*1.5)*3, ui_x+700 + 600, ui_y + box_size + (box_size*1.5)*3) {
            if !button_lock &amp;&amp; mouse_check_button_pressed(mb_left) {
                amy_order_enable = !amy_order_enable;
            }
        }
    
    for(i=0; i&lt;list_max &amp;&amp; i&lt;list_size; i++)
        if mouse_area(0,130+i*150,965,270+i*150)
            highlight_list = filter_list[i+scroll];
    
    if !button_lock &amp;&amp; mouse_check_button_pressed(mb_left) &amp;&amp; highlight_selection &gt; -1 {
        scr_remove_char(highlight_selection)
    }
    if !button_lock &amp;&amp; mouse_check_button_pressed(mb_left) &amp;&amp; highlight_list &gt; -1 {
        switch(list_mode) {
        
            case 0:
                if scr_char_picked(highlight_list)
                    scr_remove_char(highlight_list)
                else
                    scr_pick_char(highlight_list)
            break;
    
            case 1:
                if !traveller_pick[highlight_list] &amp;&amp; !scr_max_travellers() {
                    traveller_pick[highlight_list] = 1;
                } else {
                    traveller_pick[highlight_list] = 0;
                }
            break;
            
            case 2:
                if !fabled_pick[highlight_list] &amp;&amp; !scr_max_fabled() {
                    fabled_pick[highlight_list] = 1;
                } else {
                    fabled_pick[highlight_list] = 0;
                }
            break;
    
        }
    }
    
    sp_scroll = max(scroll_max div 15, 1)
    
    if !button_lock &amp;&amp; (mouse_wheel_down() || (!arrow_button_cd &amp;&amp; (keyboard_check(vk_down) || keyboard_check(vk_right)))) {
        if scroll &lt; scroll_max
            scroll = min(scroll_max, scroll+sp_scroll);
            arrow_button_cd = 4;
    }
    
    if !button_lock &amp;&amp; (mouse_wheel_up() || (!arrow_button_cd &amp;&amp; (keyboard_check(vk_up) || keyboard_check(vk_left)))) {
        if scroll &gt; 0 {
            scroll = max(scroll-sp_scroll, 0);
            arrow_button_cd = 4;
        }
    }
}

highlight_tag = -1;
if !button_lock {
    if keyboard_check_pressed(vk_f5)
        background_enable = !background_enable;
    if keyboard_check_pressed(vk_f9)
        pic_mode = !pic_mode;

    if help_box_open {
        if keyboard_check_pressed(vk_anykey)
            help_box_open = 0;
    } else if keyboard_check_pressed(vk_f1) {
        help_box_open = 1;
    }
    
    if filter_box_open {
        if keyboard_check_pressed(vk_space)
            filter_box_open = 0;
        box_ui_x = 320;
        box_ui_y = 320;
        sep_x = 900
        for(i=0;i&lt;tag_filter_amount;i++) {
            tmp_x_cen = box_ui_x+75+(i%2)*sep_x;
            tmp_y_cen = box_ui_y+60+(i div 2)*100
            if mouse_area(tmp_x_cen-50,tmp_y_cen-50,tmp_x_cen+800,tmp_y_cen+50) {
                highlight_tag = i;
                if mouse_check_button_pressed(mb_left) {
                    tag_filter_disable[i] = 0;
                    tag_filter_enable[i] = !tag_filter_enable[i]
                    scr_refresh();
                    break;
                }
                if mouse_check_button_pressed(mb_right) {
                    tag_filter_enable[i] = 0;
                    tag_filter_disable[i] = !tag_filter_disable[i]
                    scr_refresh();
                    break;
                }
            }
        }

        tmp_x_cen = box_ui_x+75+(50%2)*sep_x;
        tmp_y_cen = box_ui_y+60+(50 div 2)*100
        if mouse_area(tmp_x_cen-50,tmp_y_cen-50,tmp_x_cen+800,tmp_y_cen+50) {
            if mouse_check_button_pressed(mb_left) {
                tag_filter_mode = !tag_filter_mode
                scr_refresh();
            }
        }

        tmp_x_cen = box_ui_x+75+(51%2)*sep_x;
        tmp_y_cen = box_ui_y+60+(51 div 2)*100
        if mouse_area(tmp_x_cen-50,tmp_y_cen-50,tmp_x_cen+800,tmp_y_cen+50) {
            if mouse_check_button_pressed(mb_left) {
                for(i=0;i&lt;tag_filter_amount;i++) {
                    tag_filter_enable[i] = 0;
                    tag_filter_disable[i] = 0;
                }
                scr_refresh();
            }
        }
    } else if keyboard_check_pressed(vk_space) {
        filter_box_open = 1;
    }
}

if arrow_button_cd &gt; 0
    arrow_button_cd--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(FnDescFont);
draw_set_halign(fa_left);
draw_set_valign(fa_center);

if draw_mode = 0 {
    draw_text_colour(20,30,"F1 - Справка",c_black,c_black,c_black,c_black,1);
    if (background_enable)
        draw_sprite_ext(SprBack,0,0,0,1,1,0,image_blend,0.25);
    if (highlight_list &gt; -1 || highlight_selection &gt; -1) {
        tmp = max(highlight_list, highlight_selection);
        if list_mode = 0 || highlight_selection &gt; -1 {
            draw_sprite_ext(charIcon[tmp],pic_mode,180,3360, 1.5/(1+pic_scale*pic_mode), 1.5/(1+pic_scale*pic_mode), 0, image_blend, 1);
            draw_text_ext_colour(330,3360,charTitle[tmp],60,410,c_black,c_black,c_black,c_black,1);
            draw_text_ext_colour(740,3360,charDesc[tmp],60,1700,c_black,c_black,c_black,c_black,1);
        } else if list_mode = 1 {
            draw_sprite_ext(travellerIcon[tmp],pic_mode,180,3360, 1.5/(1+pic_scale*pic_mode), 1.5/(1+pic_scale*pic_mode), 0, image_blend, 1);
            draw_text_ext_colour(330,3360,travellerTitle[tmp],60,410,c_black,c_black,c_black,c_black,1);
            draw_text_ext_colour(740,3360,travellerDesc[tmp],60,1700,c_black,c_black,c_black,c_black,1);
        } else if list_mode = 2 {
            draw_sprite_ext(fabledIcon[tmp],pic_mode,180,3360, 1.5/(1+pic_scale*pic_mode), 1.5/(1+pic_scale*pic_mode), 0, image_blend, 1);
            draw_text_ext_colour(330,3360,fabledTitle[tmp],60,410,c_black,c_black,c_black,c_black,1);
            draw_text_ext_colour(740,3360,fabledDesc[tmp],60,1700,c_black,c_black,c_black,c_black,1);
        }
    }
    if (highlight_tag &gt; -1) {
        draw_text_ext_colour(330,3360,tag_filter_desc[highlight_tag],60,1700,c_black,c_black,c_black,c_black,1);
    }
    draw_line_width_colour(0,3240,2480,3240,15,c_black,c_black);
    draw_line_width_colour(965,0,965,3240,15,c_black,c_black);
    
    for(i=0; i&lt;=charGroup.demon; i++) {
        if (pick_group_amount[i]) {
            for(j=0; j&lt;pick_group_amount[i]; j++) {
                draw_sprite_ext(charIcon[pick_group_select[i,j]],pic_mode,ui_icon_x+(j%9)*150,ui_icon_y+(j div 9)*150+460*i,1/(1+pic_scale*pic_mode),1/(1+pic_scale*pic_mode),0,image_blend,1);
                tmp_jynx_draw = 0;
                tmp_jynx_draw_icon = SprDjinn;
                for(k=0; k&lt;=charGroup.demon; k++)
                    for(l=0; l&lt;pick_group_amount[k]; l++) {
                        if scr_jynxed(pick_group_select[i, j],pick_group_select[k, l]) {
                            if tmp_jynx_draw = 0 {
                                tmp_jynx_draw = 1;
                                tmp_jynx_draw_icon = charIcon[pick_group_select[k, l]];
                            } else if tmp_jynx_draw = 1 {
                                tmp_jynx_draw = 2;
                                tmp_jynx_draw_icon = SprDjinn;
                            }
                        }
                    }
                if (tmp_jynx_draw)
                    draw_sprite_ext(tmp_jynx_draw_icon,pic_mode,ui_icon_x+(j%9)*150+50,ui_icon_y+(j div 9)*150+460*i+50,0.4/(1+pic_scale*pic_mode),0.4/(1+pic_scale*pic_mode),0,image_blend,1);
            }
        }
    }
    
    for(i=0; i&lt;list_max &amp;&amp; i&lt;list_size; i++) {
        switch(list_mode) {
        
            case 0:
                draw_sprite_ext(charIcon[filter_list[i+scroll]],pic_mode,150,200+i*150,1/(1+pic_scale*pic_mode),1/(1+pic_scale*pic_mode),0,image_blend,1);
                draw_text_colour(300,200+i*150,charTitle[filter_list[i+scroll]],c_black,c_black,c_black,c_black,1)
                if scr_char_picked(filter_list[i+scroll])
                    draw_sprite_ext(SprUiTick,0,850,200+i*150,1,1,0,image_blend,1)
                if i+scroll+1 &lt; list_size &amp;&amp; group[filter_list[i+scroll+1]] != group[filter_list[i+scroll]]
                    draw_line_width_colour(100,200+i*150+75,500,200+i*150+75,10,c_black,c_black)
            break;
            
            case 1:
                draw_sprite_ext(travellerIcon[filter_list[i+scroll]],pic_mode,150,200+i*150,1/(1+pic_scale*pic_mode),1/(1+pic_scale*pic_mode),0,image_blend,1);
                draw_text_colour(300,200+i*150,travellerTitle[filter_list[i+scroll]],c_black,c_black,c_black,c_black,1)
                if traveller_pick[filter_list[i+scroll]]
                    draw_sprite_ext(SprUiTick,0,850,200+i*150,1,1,0,image_blend,1)
            break;
            
            case 2:
                draw_sprite_ext(fabledIcon[filter_list[i+scroll]],pic_mode,150,200+i*150,1/(1+pic_scale*pic_mode),1/(1+pic_scale*pic_mode),0,image_blend,1);
                draw_text_colour(300,200+i*150,fabledTitle[filter_list[i+scroll]],c_black,c_black,c_black,c_black,1)
                if fabled_pick[filter_list[i+scroll]]
                    draw_sprite_ext(SprUiTick,0,850,200+i*150,1,1,0,image_blend,1)
            break;
        }
    }
    
    for(i=0; i&lt;=setName.experimental; i++) {
        draw_rectangle_colour(ui_x,ui_y + (box_size*1.5)*i,ui_x+box_size,ui_y+box_size + (box_size*1.5)*i,c_black,c_black,c_black,c_black,0);
        draw_rectangle_colour(ui_x+12,ui_y+12 + (box_size*1.5)*i,ui_x+box_size-12,ui_y-12+box_size + (box_size*1.5)*i,c_white,c_white,c_white,c_white,0);
        if filter_set[i]
            draw_sprite_ext(SprUiTick,0,ui_x+box_size/2,ui_y + (box_size*1.5)*i + box_size/3,1,1,0,image_blend,1);
        draw_text_colour(ui_x + box_size + 50, ui_y+box_size*0.5 + (box_size*1.5)*i, titleSet[i], c_black, c_black, c_black, c_black, 1);
    }
    
    for(i=0; i&lt;=2; i++) {
        draw_rectangle_colour(ui_x+700,ui_y + (box_size*1.5)*i,ui_x+700+box_size,ui_y+box_size + (box_size*1.5)*i,c_black,c_black,c_black,c_black,0);
        draw_rectangle_colour(ui_x+700+12,ui_y+12 + (box_size*1.5)*i,ui_x+700+box_size-12,ui_y-12+box_size + (box_size*1.5)*i,c_white,c_white,c_white,c_white,0);
        if list_mode = i
            draw_sprite_ext(SprUiTick,0,ui_x+700+box_size/2,ui_y + (box_size*1.5)*i + box_size/3,1,1,0,image_blend,1);
        draw_text_colour(ui_x+700 + box_size + 50, ui_y+box_size*0.5 + (box_size*1.5)*i, side_char_mode_title[i], c_black, c_black, c_black, c_black, 1);
    }
    
    
    draw_rectangle_colour(ui_x+700,ui_y + (box_size*1.5)*3,ui_x+700+box_size,ui_y+box_size + (box_size*1.5)*3,c_black,c_black,c_black,c_black,0);
    draw_rectangle_colour(ui_x+700+12,ui_y+12 + (box_size*1.5)*3,ui_x+700+box_size-12,ui_y-12+box_size + (box_size*1.5)*3,c_white,c_white,c_white,c_white,0);
    if amy_order_enable
        draw_sprite_ext(SprUiTick,0,ui_x+700+box_size/2,ui_y + (box_size*1.5)*3 + box_size/3,1,1,0,image_blend,1);
    draw_text_colour(ui_x+700 + box_size + 50, ui_y+box_size*0.5 + (box_size*1.5)*3, "Порядок Эми", c_black, c_black, c_black, c_black, 1);
    
    text = "СОХРАНИТЬ"
    if button_lock
        text = "ПОДОЖДИТЕ..."
    
    draw_text_colour(ui_icon_x + 20, ui_icon_y - 130, "Выбранные персонажи   " + string(pick_current) + "/" + string(pick_max),c_black,c_black,c_black,c_black,1);
    
    draw_text_colour(ui_x + 50, ui_y + box_size*7, text, c_black, c_black, c_black, c_black, 1);
    
    draw_text_colour(ui_x + 50, ui_y + box_size*9, "ОЧИСТИТЬ", c_black, c_black, c_black, c_black, 1);
    
    draw_text_colour(ui_x + 570, ui_y + box_size*7, "НАЗВАНИЕ СЦЕНАРИЯ:", c_black, c_black, c_black, c_black, 1);
    draw_text_colour(ui_x + 570, ui_y + box_size*7+60, script_title, c_black, c_black, c_black, c_black, 1); 
    
    draw_text_colour(ui_x + 770, ui_y + box_size*9, "ЗАГРУЗИТЬ JSON", c_black, c_black, c_black, c_black, 1);
    
    draw_text_colour(ui_x, ui_y + box_size*11.5, "%appdata%\BotCScripterRu  &lt;= сохраняется сюда#кликните, чтобы скопировать путь", c_black, c_black, c_black, c_black, 0.5)
    
    if help_box_open || filter_box_open {
        draw_rectangle_colour(300,300,view_wview[0]-300,view_hview[0]-300,c_black,c_black,c_black,c_black,0);
        draw_rectangle_colour(315,315,view_wview[0]-315,view_hview[0]-315,c_ltgray,c_ltgray,c_ltgray,c_ltgray,0);
        box_ui_x = 320;
        box_ui_y = 320;
        sep_x = 900
        if (help_box_open) {
            draw_set_halign(fa_left);
            draw_set_valign(fa_top);
            draw_text_ext_colour(box_ui_x+30,box_ui_y+100,"Открыть дополнительные фильтры: Пробел##На дополнительные фильтры можно нажимать ПКМ - это означает не включать в поиск##Чтобы получить распечатку способностей Сказок и Путников - ПКМ по ним в основных фильтрах##Чтобы собрать основные сценарии - ПКМ по их названиям в фильтрах##Если у иконки персонажа в основной области маленькая иконка в углу - у вас в сценарии будут правила Джина##Если выбирать Сказки и Путников - они будут добавлены как рекоммендованные в ночной порядок##Убрать задник: F5##Старые/новые иконки персонажей: F9",
             70,1770,c_black,c_black,c_black,c_black,1);
        }
        if (filter_box_open) {
            for(i=0; i&lt;tag_filter_amount; i++) {
                draw_circle_colour(box_ui_x+75+(i%2)*sep_x,box_ui_y+60+(i div 2)*100,25,c_black,c_black,0);
                draw_circle_colour(box_ui_x+75+(i%2)*sep_x,box_ui_y+60+(i div 2)*100,20,c_white,c_white,0);
                if tag_filter_enable[i]
                    draw_sprite_ext(SprUiSmallTick,0,box_ui_x+75+(i%2)*sep_x,box_ui_y+60+(i div 2)*100,1,1,0,image_blend,1);
                if tag_filter_disable[i]
                    draw_sprite_ext(SprUiCross,0,box_ui_x+75+(i%2)*sep_x,box_ui_y+60+(i div 2)*100,1,1,0,image_blend,1);
                draw_text_colour(box_ui_x+150+(i%2)*sep_x,box_ui_y+60+(i div 2)*100,tag_filter_name[i],c_black,c_black,c_black,c_black,1);
            }
            tmp_text = "Режим: хотя бы один"
            if tag_filter_mode
                tmp_text = "Режим: одновременно"
            draw_text_colour(box_ui_x+150+(50%2)*sep_x,box_ui_y+60+(50 div 2)*100,tmp_text,c_black,c_black,c_black,c_black,1);
            draw_text_colour(box_ui_x+150+(51%2)*sep_x,box_ui_y+60+(51 div 2)*100,"Сбросить фильтры",c_black,c_black,c_black,c_black,1);
        }
    }
}

draw_set_font(FnMainFont);
draw_set_halign(fa_left);
draw_set_valign(fa_center);

if draw_mode = 1 {

    pointer_y = 60;
    for(i=0; i&lt;=charGroup.demon; i++) {
        if (pick_group_amount[i]) {
            draw_sprite_ext(titleCardSprite[i],1,0,pointer_y,1,1,0,image_blend,1);
            if pointer_y = 60 &amp;&amp; script_title != "" {
                draw_set_font(FnTitleFont);
                draw_rectangle_colour(180,pointer_y-40,220+string_width(script_title),pointer_y+40,c_white,c_white,c_white,c_white,0);
                draw_text_colour(200,pointer_y,script_title,c_black,c_black,c_black,c_black,1);
                draw_set_font(FnMainFont);
            }
            pointer_y+=100;
            for(j=0; j&lt;pick_group_amount[i]; j++) {
                draw_sprite_ext(charIcon[pick_group_select[i, j]], pic_mode, 130,pointer_y,1/(1+pic_scale*pic_mode),1/(1+pic_scale*pic_mode),0,image_blend,1);
                draw_text_ext_colour(250,pointer_y,charTitle[pick_group_select[i, j]],60,2480,c_black,c_black,c_black,c_black,1);
                draw_text_ext_colour(620,pointer_y,charDesc[pick_group_select[i, j]],50,1820,c_black,c_black,c_black,c_black,1);
                pointer_x = 0;
                for(k=0; k&lt;=charGroup.demon; k++)
                    for(l=0; l&lt;pick_group_amount[k]; l++)
                        if pick_group_select[i, j] &lt; pick_group_select[k, l] &amp;&amp; scr_jynxed(pick_group_select[i, j],pick_group_select[k, l]) {
                            draw_sprite_ext(charIcon[pick_group_select[k, l]],pic_mode,300+pointer_x,pointer_y+50,0.4/(1+pic_scale*pic_mode),0.4/(1+pic_scale*pic_mode),0,image_blend,1);
                            pointer_x += 50;
                        }
                if j = pick_group_amount[i]-1
                    pointer_y+=100;
                else
                    pointer_y+=120;
            }
        }
    }

    draw_sprite_ext(SprC,0,100,3470,1,1,0,image_blend,1);
    draw_text_colour(1800,3470,"*каждая ночь, кроме первой",c_black,c_black,c_black,c_black,1);
}

if draw_mode = 2 {
    draw_sprite_ext(SprFirstNight, 1, 1240, 500, 1, 1, 0, image_blend, 1);
    if invert_other_night
        spr = SprOtherNight;
    else
        spr = SprOtherNightInverted
    draw_sprite_ext(spr, 1, 1240, 3000, 1, 1, 0, image_blend, 1);
    
    pointer_y = 80;
    for(i=1; i&lt;first_night_order_array_length; i++) {
        found = 0;
        remove_scale = 1;
        if (i = f_night_minion_info) {
            found = 1;
            spr = SprMinion;
            text = "Информация для приспешников"
            remove_scale = 0;
        } else if (i = f_night_demon_info) {
            found = 1;
            spr = SprDemon;
            text = "Информация для демона"
            remove_scale = 0;
        } else if (i = f_night_dawn_order) {
            found = 1;
            spr = SprDawn;
            text = "Рассвет"
            remove_scale = 0;
        } else {
            for(j=0; j&lt;4; j++)
                for(k=0; k&lt;pick_group_amount[j]; k++) {
                    if f_night[pick_group_select[j,k]] = i {
                        spr = charIcon[pick_group_select[j,k]];
                        text = charTitle[pick_group_select[j,k]];
                        found = 1;
                    }
                }
            for(j=1; j&lt;travellerName.lastChar; j++)
                if traveller_pick[j] &amp;&amp; (traveller_f_night[j] = i) {
                        spr = travellerIcon[j];
                        text = travellerTitle[j];
                        found = 1;
                }
        }
        if found {
            draw_sprite_ext(spr, pic_mode, 160, pointer_y, 1/(1+pic_scale*pic_mode*remove_scale), 1/(1+pic_scale*pic_mode*remove_scale), 0, image_blend, 1);
            draw_text_colour(280, pointer_y, text, c_black, c_black, c_black, c_black, 1);
            pointer_y+=120;
        }
    }
    
    pointer_y = 3427;
    for(i=other_night_order_array_length-1; i&gt;=0; i--) {
        found = 0;
        remove_scale = 1;
        if (i = 0) {
            found = 1;
            spr = SprDusk;
            text = "Закат"
            remove_scale = 0;
        } else if (i = o_night_dawn_order) {
            found = 1;
            spr = SprDawn;
            text = "Рассвет"
            remove_scale = 0;
        } else {
            for(j=0; j&lt;4; j++)
                for(k=0; k&lt;pick_group_amount[j]; k++) {
                    if o_night[pick_group_select[j,k]] = i {
                        spr = charIcon[pick_group_select[j,k]];
                        text = charTitle[pick_group_select[j,k]];
                        found = 1;
                    }
                }
            for(j=1; j&lt;travellerName.lastChar; j++)
                if traveller_pick[j] &amp;&amp; (traveller_o_night[j] = i) {
                        spr = travellerIcon[j];
                        text = travellerTitle[j];
                        found = 1;
                }
        }
        if found {
            draw_sprite_ext(spr, pic_mode, 1900, pointer_y, 1/(1+pic_scale*pic_mode*remove_scale), 1/(1+pic_scale*pic_mode*remove_scale), 0, image_blend, 1);
            draw_text_colour(2020, pointer_y, text, c_black, c_black, c_black, c_black, 1);
            pointer_y-=120;
        }
    }
    
    pointer_y = 850;
    jynx_count = 0;
    jynx_max = jynx_init_max;
    
    if scr_has_travellers() {
        jynx_max-=2;
        draw_text_ext_colour(850,pointer_y,"Рекомендуемые Путники:",50,750,c_black, c_black, c_black, c_black, 1);
        pointer_y += 100;
        pointer_x = 850;
        for(i=1;i&lt;travellerName.lastChar;i++)
            if traveller_pick[i] {
                draw_sprite_ext(travellerIcon[i],pic_mode,pointer_x,pointer_y,0.7/(1+pic_scale*pic_mode),0.7/(1+pic_scale*pic_mode),0,image_blend,1)
                pointer_x+=110;
            }
        pointer_y += 200;
    }
    if scr_has_fabled() {
        jynx_max-=2;
        draw_text_ext_colour(850,pointer_y,"Рекомендуемые Сказки:",50,750,c_black, c_black, c_black, c_black, 1);
        pointer_y += 100;
        pointer_x = 850;
        for(i=0;i&lt;fabledName.lastChar;i++)
            if fabled_pick[i] {
                draw_sprite_ext(fabledIcon[i],pic_mode,pointer_x,pointer_y,0.7/(1+pic_scale*pic_mode),0.7/(1+pic_scale*pic_mode),0,image_blend,1)
                pointer_x+=110;
            }
        pointer_y += 200;
    }
    
    for(i=0; i&lt;4; i++)
        for(j=0; j&lt;pick_group_amount[i]; j++)
            for(k=0; k&lt;4; k++)
                for(l=0; l&lt;pick_group_amount[k]; l++) {
                    if pick_group_select[i,j] &lt; pick_group_select[k,l] &amp;&amp; scr_jynxed(pick_group_select[i,j],pick_group_select[k,l]) {
                        if jynx_count &lt; jynx_max {
                            draw_sprite_ext(charIcon[pick_group_select[i,j]],pic_mode,800,pointer_y,1/(1+pic_scale*pic_mode),1/(1+pic_scale*pic_mode),0,image_blend,1)
                            draw_sprite_ext(charIcon[pick_group_select[k,l]],pic_mode,920,pointer_y,1/(1+pic_scale*pic_mode),1/(1+pic_scale*pic_mode),0,image_blend,1)
                            draw_text_ext_colour(1020,pointer_y,scr_jynxed_desc(pick_group_select[i,j],pick_group_select[k,l]),50,750,c_black, c_black, c_black, c_black, 1);
                            pointer_y += 150;
                        }
                        jynx_count++;
                    }
                }
    if jynx_count &gt;= jynx_max+1 {
        draw_text_ext_colour(920,pointer_y,"Не перечисленных сглазов: "+string(jynx_count-13),50,900,c_black, c_black, c_black, c_black, 1);
    }
    
    draw_sprite_ext(SprC,0,100,3470,1,1,0,image_blend,1);
}

if draw_mode = 3 {

    draw_set_font(FnMainFont);
    pointer_y = 60;
    draw_sprite_ext(SprTravellers,1,0,pointer_y,1,1,0,image_blend,1);
    pointer_y+=100;
    for(i=1; i&lt;travellerName.lastChar; i++) {
        draw_sprite_ext(travellerIcon[i], pic_mode, 130,pointer_y,1/(1+pic_scale*pic_mode),1/(1+pic_scale*pic_mode),0,image_blend,1);
        draw_text_ext_colour(250,pointer_y,travellerTitle[i],60,2480,c_black,c_black,c_black,c_black,1);
        draw_text_ext_colour(620,pointer_y,travellerDesc[i],50,1820,c_black,c_black,c_black,c_black,1);
        pointer_y+=120;
    }

    draw_sprite_ext(SprC,0,100,3470,1,1,0,image_blend,1);
    draw_text_colour(1800,3470,"*каждая ночь, кроме первой",c_black,c_black,c_black,c_black,1);
}

if draw_mode = 4 {

    draw_set_font(FnMainFont);
    pointer_y = 60;
    draw_sprite_ext(SprFabled,1,0,pointer_y,1,1,0,image_blend,1);
    pointer_y+=100;
    for(i=0; i&lt;fabledName.lastChar; i++) {
        draw_sprite_ext(fabledIcon[i], pic_mode, 130,pointer_y,1/(1+pic_scale*pic_mode),1/(1+pic_scale*pic_mode),0,image_blend,1);
        draw_text_ext_colour(250,pointer_y,fabledTitle[i],60,2480,c_black,c_black,c_black,c_black,1);
        draw_text_ext_colour(620,pointer_y,fabledDesc[i],50,1820,c_black,c_black,c_black,c_black,1);
        pointer_y+=120;
    }

    draw_sprite_ext(SprC,0,100,3470,1,1,0,image_blend,1);
    draw_text_colour(1800,3470,"*каждая ночь, кроме первой",c_black,c_black,c_black,c_black,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
